{
  "version": 3,
  "sources": ["../../tom-select/src/contrib/microevent.ts", "../../tom-select/src/contrib/microplugin.ts", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/regex.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/strings.js", "../../tom-select/node_modules/@orchidjs/unicode-variants/dist/esm/index.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/utils.js", "../../tom-select/node_modules/@orchidjs/sifter/dist/esm/sifter.js", "../../tom-select/node_modules/@orchidjs/sifter/lib/utils.ts", "../../tom-select/src/vanilla.ts", "../../tom-select/src/contrib/highlight.ts", "../../tom-select/src/constants.ts", "../../tom-select/src/defaults.ts", "../../tom-select/src/utils.ts", "../../tom-select/src/getSettings.ts", "../../tom-select/src/tom-select.ts", "../../tom-select/src/plugins/change_listener/plugin.ts", "../../tom-select/src/plugins/checkbox_options/plugin.ts", "../../tom-select/src/plugins/clear_button/plugin.ts", "../../tom-select/src/plugins/drag_drop/plugin.ts", "../../tom-select/src/plugins/dropdown_header/plugin.ts", "../../tom-select/src/plugins/caret_position/plugin.ts", "../../tom-select/src/plugins/dropdown_input/plugin.ts", "../../tom-select/src/plugins/input_autogrow/plugin.ts", "../../tom-select/src/plugins/no_backspace_delete/plugin.ts", "../../tom-select/src/plugins/no_active_items/plugin.ts", "../../tom-select/src/plugins/optgroup_columns/plugin.ts", "../../tom-select/src/plugins/remove_button/plugin.ts", "../../tom-select/src/plugins/restore_on_backspace/plugin.ts", "../../tom-select/src/plugins/virtual_scroll/plugin.ts", "../../tom-select/src/tom-select.complete.ts"],
  "sourcesContent": ["/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\ntype TCallback = (...args:any) => any;\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events:string,callback:(event:string)=>any){\n\tevents.split(/\\s+/).forEach((event) =>{\n\t\tcallback(event);\n\t});\n}\n\nexport default class MicroEvent{\n\n\tpublic _events: {[key:string]:TCallback[]};\n\n\tconstructor(){\n\t\tthis._events = {};\n\t}\n\n\ton(events:string, fct:TCallback){\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = this._events[event] || [];\n\t\t\tevent_array.push(fct);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\toff(events:string, fct:TCallback){\n\t\tvar n = arguments.length;\n\t\tif( n === 0 ){\n\t\t\tthis._events = {};\n\t\t\treturn;\n\t\t}\n\n\t\tforEvents(events,(event) => {\n\n\t\t\tif (n === 1){\n\t\t\t\tdelete this._events[event];\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst event_array = this._events[event];\n\t\t\tif( event_array === undefined ) return;\n\n\t\t\tevent_array.splice(event_array.indexOf(fct), 1);\n\t\t\tthis._events[event] = event_array;\n\t\t});\n\t}\n\n\ttrigger(events:string, ...args:any){\n\t\tvar self = this;\n\n\t\tforEvents(events,(event) => {\n\t\t\tconst event_array = self._events[event];\n\t\t\tif( event_array === undefined ) return;\n\t\t\tevent_array.forEach(fct => {\n\t\t\t\tfct.apply(self, args );\n\t\t\t});\n\n\t\t});\n\t}\n};\n", "/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\ntype TSettings = {\n\t[key:string]:any\n}\n\ntype TPlugins = {\n\tnames: string[],\n\tsettings: TSettings,\n\trequested: {[key:string]:boolean},\n\tloaded: {[key:string]:any}\n};\n\nexport type TPluginItem = {name:string,options:{}};\nexport type TPluginHash = {[key:string]:{}};\n\n\n\n\nexport default function MicroPlugin(Interface: any ){\n\n\tInterface.plugins = {};\n\n\treturn class extends Interface{\n\n\t\tpublic plugins:TPlugins = {\n\t\t\tnames     : [],\n\t\t\tsettings  : {},\n\t\t\trequested : {},\n\t\t\tloaded    : {}\n\t\t};\n\n\t\t/**\n\t\t * Registers a plugin.\n\t\t *\n\t\t * @param {function} fn\n\t\t */\n\t\tstatic define(name:string, fn:(this:any,settings:TSettings)=>any){\n\t\t\tInterface.plugins[name] = {\n\t\t\t\t'name' : name,\n\t\t\t\t'fn'   : fn\n\t\t\t};\n\t\t}\n\n\n\t\t/**\n\t\t * Initializes the listed plugins (with options).\n\t\t * Acceptable formats:\n\t\t *\n\t\t * List (without options):\n\t\t *   ['a', 'b', 'c']\n\t\t *\n\t\t * List (with options):\n\t\t *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t\t *\n\t\t * Hash (with options):\n\t\t *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t\t *\n\t\t * @param {array|object} plugins\n\t\t */\n\t\tinitializePlugins(plugins:string[]|TPluginItem[]|TPluginHash) {\n\t\t\tvar key, name;\n\t\t\tconst self  = this;\n\t\t\tconst queue:string[] = [];\n\n\t\t\tif (Array.isArray(plugins)) {\n\t\t\t\tplugins.forEach((plugin:string|TPluginItem)=>{\n\t\t\t\t\tif (typeof plugin === 'string') {\n\t\t\t\t\t\tqueue.push(plugin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.plugins.settings[plugin.name] = plugin.options;\n\t\t\t\t\t\tqueue.push(plugin.name);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (plugins) {\n\t\t\t\tfor (key in plugins) {\n\t\t\t\t\tif (plugins.hasOwnProperty(key)) {\n\t\t\t\t\t\tself.plugins.settings[key] = plugins[key];\n\t\t\t\t\t\tqueue.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile( name = queue.shift() ){\n\t\t\t\tself.require(name);\n\t\t\t}\n\t\t}\n\n\t\tloadPlugin(name:string) {\n\t\t\tvar self    = this;\n\t\t\tvar plugins = self.plugins;\n\t\t\tvar plugin  = Interface.plugins[name];\n\n\t\t\tif (!Interface.plugins.hasOwnProperty(name)) {\n\t\t\t\tthrow new Error('Unable to find \"' +  name + '\" plugin');\n\t\t\t}\n\n\t\t\tplugins.requested[name] = true;\n\t\t\tplugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t\t\tplugins.names.push(name);\n\t\t}\n\n\t\t/**\n\t\t * Initializes a plugin.\n\t\t *\n\t\t */\n\t\trequire(name:string) {\n\t\t\tvar self = this;\n\t\t\tvar plugins = self.plugins;\n\n\t\t\tif (!self.plugins.loaded.hasOwnProperty(name)) {\n\t\t\t\tif (plugins.requested[name]) {\n\t\t\t\t\tthrow new Error('Plugin has circular dependency (\"' + name + '\")');\n\t\t\t\t}\n\t\t\t\tself.loadPlugin(name);\n\t\t\t}\n\n\t\t\treturn plugins.loaded[name];\n\t\t}\n\n\t};\n\n}\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\nexport { allSubstrings };\n//# sourceMappingURL=strings.js.map\n", "/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\nimport { toArray, setToPattern, escape_regex, arrayToPattern, sequencePattern } from './regex.js';\nexport { escape_regex } from './regex.js';\nimport { allSubstrings } from './strings.js';\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\nexport { _asciifold, asciifold, code_points, generateMap, generateSets, generator, getPattern, initialize, mapSequence, normalize, substringsToPattern, unicode_map };\n//# sourceMappingURL=index.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { asciifold } from '@orchidjs/unicode-variants';\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue };\n//# sourceMappingURL=utils.js.map\n", "/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\nimport { iterate, cmp, propToArray, getAttrNesting, getAttr, scoreValue } from './utils.js';\nexport { cmp, getAttr, getAttrNesting, iterate, propToArray, scoreValue } from './utils.js';\nimport { escape_regex, getPattern } from '@orchidjs/unicode-variants';\nexport { getPattern } from '@orchidjs/unicode-variants';\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\nexport { Sifter };\n//# sourceMappingURL=sifter.js.map\n", "\nimport { asciifold } from '@orchidjs/unicode-variants';\nimport * as T from './types';\n\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttr = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    return obj[name];\n};\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nexport const getAttrNesting = (obj:{[key:string]:any}, name:string ) => {\n    if (!obj ) return;\n    var part, names = name.split(\".\");\n\twhile( (part = names.shift()) && (obj = obj[part]));\n    return obj;\n};\n\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\nexport const scoreValue = (value:string, token:T.Token, weight:number ):number => {\n\tvar score, pos;\n\n\tif (!value) return 0;\n\n\tvalue = value + '';\n\tif( token.regex == null ) return 0;\n\tpos = value.search(token.regex);\n\tif (pos === -1) return 0;\n\n\tscore = token.string.length / value.length;\n\tif (pos === 0) score += 0.5;\n\n\treturn score * weight;\n};\n\n\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\nexport const propToArray = (obj:{[key:string]:any}, key:string) => {\n\tvar value = obj[key];\n\n\tif( typeof value == 'function' ) return value;\n\n\tif( value && !Array.isArray(value) ){\n\t\tobj[key] = [value];\n\t}\n}\n\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\nexport const iterate = (object:[]|{[key:string]:any}, callback:(value:any,key:any)=>any) => {\n\n\tif ( Array.isArray(object)) {\n\t\tobject.forEach(callback);\n\n\t}else{\n\n\t\tfor (var key in object) {\n\t\t\tif (object.hasOwnProperty(key)) {\n\t\t\t\tcallback(object[key], key);\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n\nexport const cmp = (a:number|string, b:number|string) => {\n\tif (typeof a === 'number' && typeof b === 'number') {\n\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t}\n\ta = asciifold(a + '').toLowerCase();\n\tb = asciifold(b + '').toLowerCase();\n\tif (a > b) return 1;\n\tif (b > a) return -1;\n\treturn 0;\n};\n", "\nimport { iterate } from '@orchidjs/sifter/lib/utils';\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\nexport const getDom = ( query:any ):HTMLElement => {\n\n\tif( query.jquery ){\n\t\treturn query[0];\n\t}\n\n\tif( query instanceof HTMLElement ){\n\t\treturn query;\n\t}\n\n\tif( isHtmlString(query) ){\n\t\tvar tpl = document.createElement('template');\n\t\ttpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\t\treturn tpl.content.firstChild as HTMLElement;\n\t}\n\n\treturn document.querySelector(query);\n};\n\nexport const isHtmlString = (arg:any): boolean => {\n\tif( typeof arg === 'string' && arg.indexOf('<') > -1 ){\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport const escapeQuery = (query:string):string => {\n\treturn query.replace(/['\"\\\\]/g, '\\\\$&');\n}\n\n/**\n * Dispatch an event\n *\n */\nexport const triggerEvent = ( dom_el:HTMLElement, event_name:string ):void => {\n\tvar event = document.createEvent('HTMLEvents');\n\tevent.initEvent(event_name, true, false);\n\tdom_el.dispatchEvent(event)\n};\n\n/**\n * Apply CSS rules to a dom element\n *\n */\nexport const applyCSS = ( dom_el:HTMLElement, css:{ [key: string]: string|number }):void => {\n\tObject.assign(dom_el.style, css);\n}\n\n\n/**\n * Add css classes\n *\n */\nexport const addClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n\tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map( cls => {\n\t\t\tel.classList.add( cls );\n\t\t});\n\t});\n}\n\n/**\n * Remove css classes\n *\n */\n export const removeClasses = ( elmts:HTMLElement|HTMLElement[], ...classes:string[]|string[][] ) => {\n\n \tvar norm_classes \t= classesArray(classes);\n\telmts\t\t\t\t= castAsArray(elmts);\n\n\telmts.map( el => {\n\t\tnorm_classes.map(cls => {\n\t \t\tel.classList.remove( cls );\n\t\t});\n \t});\n }\n\n\n/**\n * Return arguments\n *\n */\nexport const classesArray = (args:string[]|string[][]):string[] => {\n\tvar classes:string[] = [];\n\titerate( args, (_classes) =>{\n\t\tif( typeof _classes === 'string' ){\n\t\t\t_classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t\t}\n\t\tif( Array.isArray(_classes) ){\n\t\t\tclasses = classes.concat(_classes);\n\t\t}\n\t});\n\n\treturn classes.filter(Boolean);\n}\n\n\n/**\n * Create an array from arg if it's not already an array\n *\n */\nexport const castAsArray = (arg:any):Array<any> => {\n\tif( !Array.isArray(arg) ){\n \t\targ = [arg];\n \t}\n\treturn arg;\n}\n\n\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\nexport const parentMatch = ( target:null|HTMLElement, selector:string, wrapper?:HTMLElement ):HTMLElement|void => {\n\n\tif( wrapper && !wrapper.contains(target) ){\n\t\treturn;\n\t}\n\n\twhile( target && target.matches ){\n\n\t\tif( target.matches(selector) ){\n\t\t\treturn target;\n\t\t}\n\n\t\ttarget = target.parentNode as HTMLElement;\n\t}\n}\n\n\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\nexport const getTail = ( list:Array<any>|NodeList, direction:number=0 ):any => {\n\n\tif( direction > 0 ){\n\t\treturn list[list.length-1];\n\t}\n\n\treturn list[0];\n}\n\n/**\n * Return true if an object is empty\n *\n */\nexport const isEmptyObject = (obj:object):boolean => {\n\treturn (Object.keys(obj).length === 0);\n}\n\n\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\nexport const nodeIndex = ( el:null|Element, amongst?:string ):number => {\n\tif (!el) return -1;\n\n\tamongst = amongst || el.nodeName;\n\n\tvar i = 0;\n\twhile( el = el.previousElementSibling ){\n\n\t\tif( el.matches(amongst) ){\n\t\t\ti++;\n\t\t}\n\t}\n\treturn i;\n}\n\n\n/**\n * Set attributes of an element\n *\n */\nexport const setAttr = (el:Element,attrs:{ [key: string]: null|string|number }) => {\n\titerate( attrs,(val,attr) => {\n\t\tif( val == null ){\n\t\t\tel.removeAttribute(attr as string);\n\t\t}else{\n\t\t\tel.setAttribute(attr as string, ''+val);\n\t\t}\n\t});\n}\n\n\n/**\n * Replace a node\n */\nexport const replaceNode = ( existing:Node, replacement:Node ) => {\n\tif( existing.parentNode ) existing.parentNode.replaceChild(replacement, existing);\n}\n", "/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\n\nimport {replaceNode} from '../vanilla';\n\n\nexport const highlight = (element:HTMLElement, regex:string|RegExp) => {\n\n\tif( regex === null ) return;\n\n\t// convet string to regex\n\tif( typeof regex === 'string' ){\n\n\t\tif( !regex.length ) return;\n\t\tregex = new RegExp(regex, 'i');\n\t}\n\n\n\t// Wrap matching part of text node with highlighting <span>, e.g.\n\t// Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\tconst highlightText = ( node:Text ):number => {\n\n\t\tvar match = node.data.match(regex);\n\t\tif( match && node.data.length > 0 ){\n\t\t\tvar spannode\t\t= document.createElement('span');\n\t\t\tspannode.className\t= 'highlight';\n\t\t\tvar middlebit\t\t= node.splitText(match.index as number);\n\n\t\t\tmiddlebit.splitText(match[0]!.length);\n\t\t\tvar middleclone\t\t= middlebit.cloneNode(true);\n\n\t\t\tspannode.appendChild(middleclone);\n\t\t\treplaceNode(middlebit, spannode);\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t};\n\n\t// Recurse element node, looking for child text nodes to highlight, unless element\n\t// is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\tconst highlightChildren = ( node:Element ):void => {\n\t\tif( node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && ( node.className !== 'highlight' || node.tagName !== 'SPAN' ) ){\n\t\t\tArray.from(node.childNodes).forEach(element => {\n\t\t\t\thighlightRecursive(element);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tconst highlightRecursive = ( node:Node|Element ):number => {\n\n\t\tif( node.nodeType === 3 ){\n\t\t\treturn highlightText(node as Text);\n\t\t}\n\n\t\thighlightChildren(node as Element);\n\n\t\treturn 0;\n\t};\n\n\thighlightRecursive( element );\n};\n\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\nexport const removeHighlight = (el:HTMLElement) => {\n\tvar elements = el.querySelectorAll(\"span.highlight\");\n\tArray.prototype.forEach.call(elements, function(el:HTMLElement){\n\t\tvar parent = el.parentNode as Node;\n\t\tparent.replaceChild(el.firstChild as Node, el);\n\t\tparent.normalize();\n\t});\n};\n", "export const KEY_A\t\t\t\t= 65;\nexport const KEY_RETURN\t\t\t= 13;\nexport const KEY_ESC\t\t\t= 27;\nexport const KEY_LEFT\t\t\t= 37;\nexport const KEY_UP\t\t\t\t= 38;\nexport const KEY_RIGHT\t\t\t= 39;\nexport const KEY_DOWN\t\t\t= 40;\nexport const KEY_BACKSPACE\t\t= 8;\nexport const KEY_DELETE\t\t\t= 46;\nexport const KEY_TAB\t\t\t= 9;\n\nexport const IS_MAC      \t\t= typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nexport const KEY_SHORTCUT\t\t= IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n", "\nexport default {\n\toptions: [],\n\toptgroups: [],\n\n\tplugins: [],\n\tdelimiter: ',',\n\tsplitOn: null, // regexp or string for splitting up values from a paste command\n\tpersist: true,\n\tdiacritics: true,\n\tcreate: null,\n\tcreateOnBlur: false,\n\tcreateFilter: null,\n\thighlight: true,\n\topenOnFocus: true,\n\tshouldOpen: null,\n\tmaxOptions: 50,\n\tmaxItems: null,\n\thideSelected: null,\n\tduplicates: false,\n\taddPrecedence: false,\n\tselectOnTab: false,\n\tpreload: null,\n\tallowEmptyOption: false,\n\t//closeAfterSelect: false,\n\trefreshThrottle: 300,\n\n\n\tloadThrottle: 300,\n\tloadingClass: 'loading',\n\n\tdataAttr: null, //'data-data',\n\toptgroupField: 'optgroup',\n\tvalueField: 'value',\n\tlabelField: 'text',\n\tdisabledField: 'disabled',\n\toptgroupLabelField: 'label',\n\toptgroupValueField: 'value',\n\tlockOptgroupOrder: false,\n\n\tsortField: '$order',\n\tsearchField: ['text'],\n\tsearchConjunction: 'and',\n\n\tmode: null,\n\twrapperClass: 'ts-wrapper',\n\tcontrolClass: 'ts-control',\n\tdropdownClass: 'ts-dropdown',\n\tdropdownContentClass: 'ts-dropdown-content',\n\titemClass: 'item',\n\toptionClass: 'option',\n\n\tdropdownParent: null,\n\tcontrolInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n\n\tcopyClassesToDropdown: false,\n\n\tplaceholder: null,\n\thidePlaceholder: null,\n\n\tshouldLoad: function(query:string):boolean{\n\t\treturn query.length > 0;\n\t},\n\n\t/*\n\tload                 : null, // function(query, callback) { ... }\n\tscore                : null, // function(search) { ... }\n\tonInitialize         : null, // function() { ... }\n\tonChange             : null, // function(value) { ... }\n\tonItemAdd            : null, // function(value, $item) { ... }\n\tonItemRemove         : null, // function(value) { ... }\n\tonClear              : null, // function() { ... }\n\tonOptionAdd          : null, // function(value, data) { ... }\n\tonOptionRemove       : null, // function(value) { ... }\n\tonOptionClear        : null, // function() { ... }\n\tonOptionGroupAdd     : null, // function(id, data) { ... }\n\tonOptionGroupRemove  : null, // function(id) { ... }\n\tonOptionGroupClear   : null, // function() { ... }\n\tonDropdownOpen       : null, // function(dropdown) { ... }\n\tonDropdownClose      : null, // function(dropdown) { ... }\n\tonType               : null, // function(str) { ... }\n\tonDelete             : null, // function(values) { ... }\n\t*/\n\n\trender: {\n\t\t/*\n\t\titem: null,\n\t\toptgroup: null,\n\t\toptgroup_header: null,\n\t\toption: null,\n\t\toption_create: null\n\t\t*/\n\t}\n};\n", "\nimport TomSelect from './tom-select';\nimport { TomLoadCallback } from './types/index';\n\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nexport const hash_key = (value:undefined|null|boolean|string|number):string|null => {\n\tif (typeof value === 'undefined' || value === null) return null;\n\treturn get_hash(value);\n};\n\nexport const get_hash = (value:boolean|string|number):string => {\n\tif (typeof value === 'boolean') return value ? '1' : '0';\n\treturn value + '';\n};\n\n/**\n * Escapes a string for use within HTML.\n *\n */\nexport const escape_html = (str:string):string => {\n\treturn (str + '')\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;');\n};\n\n\n/**\n * use setTimeout if timeout > 0 \n */\nexport const timeout = (fn:()=>void,timeout:number) => {\n\tif( timeout > 0 ){\n\t\treturn setTimeout(fn,timeout);\n\t}\n\n\tfn.call(null);\n\treturn null;\n}\n\n/**\n * Debounce the user provided load function\n *\n */\nexport const loadDebounce = (fn:(value:string,callback:TomLoadCallback) => void,delay:number) => {\n\tvar timeout: null|ReturnType<typeof setTimeout>;\n\treturn function(this:TomSelect, value:string,callback:TomLoadCallback) {\n\t\tvar self = this;\n\n\t\tif( timeout ){\n\t\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\t\tclearTimeout(timeout);\n\t\t}\n\t\ttimeout = setTimeout(function() {\n\t\t\ttimeout = null;\n\t\t\tself.loadedSearches[value] = true;\n\t\t\tfn.call(self, value, callback);\n\n\t\t}, delay);\n\t};\n};\n\n\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\nexport const debounce_events = ( self:TomSelect, types:string[], fn:() => void ) => {\n\tvar type:string;\n\tvar trigger = self.trigger;\n\tvar event_args:{ [key: string]: any } = {};\n\n\t// override trigger method\n\tself.trigger = function(){\n\t\tvar type = arguments[0];\n\t\tif (types.indexOf(type) !== -1) {\n\t\t\tevent_args[type] = arguments;\n\t\t} else {\n\t\t\treturn trigger.apply(self, arguments);\n\t\t}\n\t};\n\n\t// invoke provided function\n\tfn.apply(self, []);\n\tself.trigger = trigger;\n\n\t// trigger queued events\n\tfor( type of types ){\n\t\tif( type in event_args ){\n\t\t\ttrigger.apply(self, event_args[type]);\n\t\t}\n\t}\n};\n\n\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n * Note: \"selectionStart, selectionEnd ... apply only to inputs of types text, search, URL, tel and password\"\n * \t- https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n */\nexport const getSelection = (input:HTMLInputElement):{ start: number; length: number } => {\n\treturn {\n\t\tstart\t: input.selectionStart || 0,\n\t\tlength\t: (input.selectionEnd||0) - (input.selectionStart||0),\n\t};\n};\n\n\n/**\n * Prevent default\n *\n */\nexport const preventDefault = (evt?:Event, stop:boolean=false):void => {\n\tif( evt ){\n\t\tevt.preventDefault();\n\t\tif( stop ){\n\t\t\tevt.stopPropagation();\n\t\t}\n\t}\n}\n\n\n/**\n * Add event helper\n *\n */\nexport const addEvent = (target:EventTarget, type:string, callback:EventListenerOrEventListenerObject, options?:object):void => {\n\ttarget.addEventListener(type,callback,options);\n};\n\n\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\nexport const isKeyDown = ( key_name:keyof (KeyboardEvent|MouseEvent), evt?:KeyboardEvent|MouseEvent ) => {\n\n\tif( !evt ){\n\t\treturn false;\n\t}\n\n\tif( !evt[key_name] ){\n\t\treturn false;\n\t}\n\n\tvar count = (evt.altKey?1:0) + (evt.ctrlKey?1:0) + (evt.shiftKey?1:0) + (evt.metaKey?1:0);\n\n\tif( count === 1 ){\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\nexport const getId = (el:Element,id:string) => {\n\tconst existing_id = el.getAttribute('id');\n\tif( existing_id ){\n\t\treturn existing_id;\n\t}\n\n\tel.setAttribute('id',id);\n\treturn id;\n};\n\n\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\nexport const addSlashes = (str:string):string => {\n\treturn str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n\n/**\n *\n */\nexport const append = ( parent:Element|DocumentFragment, node: string|Node|null|undefined ):void =>{\n\tif( node ) parent.append(node);\n};\n", "import defaults from './defaults';\nimport { hash_key } from './utils';\nimport { TomOption, TomSettings, RecursivePartial } from './types/index';\nimport { iterate } from '@orchidjs/sifter/lib/utils';\nimport { TomInput } from './types/index';\n\n\nexport default function getSettings( input:TomInput, settings_user:RecursivePartial<TomSettings>):TomSettings{\n\tvar settings:TomSettings\t= Object.assign({}, defaults, settings_user);\n\n\tvar attr_data\t\t\t\t= settings.dataAttr;\n\tvar field_label\t\t\t\t= settings.labelField;\n\tvar field_value\t\t\t\t= settings.valueField;\n\tvar field_disabled\t\t\t= settings.disabledField;\n\tvar field_optgroup\t\t\t= settings.optgroupField;\n\tvar field_optgroup_label\t= settings.optgroupLabelField;\n\tvar field_optgroup_value\t= settings.optgroupValueField;\n\n\tvar tag_name\t\t\t\t= input.tagName.toLowerCase();\n\tvar placeholder\t\t\t\t= input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\tif (!placeholder && !settings.allowEmptyOption) {\n\t\tlet option\t\t= input.querySelector('option[value=\"\"]');\n\t\tif( option ){\n\t\t\tplaceholder = option.textContent;\n\t\t}\n\n\t}\n\n\tvar settings_element:{\n\t\tplaceholder\t: null|string,\n\t\toptions\t\t: TomOption[],\n\t\toptgroups\t: TomOption[],\n\t\titems\t\t: string[],\n\t\tmaxItems\t: null|number,\n\t} = {\n\t\tplaceholder\t: placeholder,\n\t\toptions\t\t: [],\n\t\toptgroups\t: [],\n\t\titems\t\t: [],\n\t\tmaxItems\t: null,\n\t};\n\n\n\t/**\n\t * Initialize from a <select> element.\n\t *\n\t */\n\tvar init_select = () => {\n\t\tvar tagName;\n\t\tvar options = settings_element.options;\n\t\tvar optionsMap:{[key:string]:any} = {};\n\t\tvar group_count = 1;\n\t\tlet $order = 0;\n\n\t\tvar readData = (el:HTMLElement):TomOption => {\n\n\t\t\tvar data\t= Object.assign({},el.dataset); // get plain object from DOMStringMap\n\t\t\tvar json\t= attr_data && data[attr_data];\n\n\t\t\tif( typeof json === 'string' && json.length ){\n\t\t\t\tdata = Object.assign(data,JSON.parse(json));\n\t\t\t}\n\n\t\t\treturn data;\n\t\t};\n\n\t\tvar addOption = (option:HTMLOptionElement, group?:string) => {\n\n\t\t\tvar value = hash_key(option.value);\n\t\t\tif ( value == null ) return;\n\t\t\tif ( !value && !settings.allowEmptyOption) return;\n\n\t\t\t// if the option already exists, it's probably been\n\t\t\t// duplicated in another optgroup. in this case, push\n\t\t\t// the current group to the \"optgroup\" property on the\n\t\t\t// existing option so that it's rendered in both places.\n\t\t\tif (optionsMap.hasOwnProperty(value)) {\n\t\t\t\tif (group) {\n\t\t\t\t\tvar arr = optionsMap[value][field_optgroup];\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = group;\n\t\t\t\t\t} else if (!Array.isArray(arr)) {\n\t\t\t\t\t\toptionsMap[value][field_optgroup] = [arr, group];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tarr.push(group);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}else{\n\n\t\t\t\tvar option_data             = readData(option);\n\t\t\t\toption_data[field_label]    = option_data[field_label] || option.textContent;\n\t\t\t\toption_data[field_value]    = option_data[field_value] || value;\n\t\t\t\toption_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t\t\t\toption_data[field_optgroup] = option_data[field_optgroup] || group;\n\t\t\t\toption_data.$option\t\t\t= option;\n\t\t\t\toption_data.$order\t\t\t= option_data.$order || ++$order;\n\n\t\t\t\toptionsMap[value] = option_data;\n\t\t\t\toptions.push(option_data);\n\t\t\t}\n\n\t\t\tif( option.selected ){\n\t\t\t\tsettings_element.items.push(value);\n\t\t\t}\n\t\t};\n\n\t\tvar addGroup = ( optgroup:HTMLOptGroupElement ) => {\n\t\t\tvar id:string, optgroup_data\n\n\t\t\toptgroup_data\t\t\t\t\t\t\t= readData(optgroup);\n\t\t\toptgroup_data[field_optgroup_label]\t\t= optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t\t\toptgroup_data[field_optgroup_value]\t\t= optgroup_data[field_optgroup_value] || group_count++;\n\t\t\toptgroup_data[field_disabled]\t\t\t= optgroup_data[field_disabled] || optgroup.disabled;\n\t\t\toptgroup_data.$order\t\t\t\t\t= optgroup_data.$order || ++$order;\n\n\t\t\tsettings_element.optgroups.push(optgroup_data);\n\n\t\t\tid = optgroup_data[field_optgroup_value];\n\n\t\t\titerate(optgroup.children, (option)=>{\n\t\t\t\taddOption(option as HTMLOptionElement, id);\n\t\t\t});\n\n\t\t};\n\n\t\tsettings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t\titerate(input.children,(child)=>{\n\t\t\ttagName = child.tagName.toLowerCase();\n\t\t\tif (tagName === 'optgroup') {\n\t\t\t\taddGroup(child as HTMLOptGroupElement);\n\t\t\t} else if (tagName === 'option') {\n\t\t\t\taddOption(child as HTMLOptionElement);\n\t\t\t}\n\t\t});\n\n\t};\n\n\n\t/**\n\t * Initialize from a <input type=\"text\"> element.\n\t *\n\t */\n\tvar init_textbox = () => {\n\t\tconst data_raw = input.getAttribute(attr_data);\n\n\t\tif (!data_raw) {\n\t\t\tvar value = input.value.trim() || '';\n\t\t\tif (!settings.allowEmptyOption && !value.length) return;\n\t\t\tconst values = value.split(settings.delimiter);\n\n\t\t\titerate( values, (value) => {\n\t\t\t\tconst option:TomOption = {};\n\t\t\t\toption[field_label] = value;\n\t\t\t\toption[field_value] = value;\n\t\t\t\tsettings_element.options.push(option);\n\t\t\t});\n\t\t\tsettings_element.items = values;\n\t\t} else {\n\t\t\tsettings_element.options = JSON.parse(data_raw);\n\t\t\titerate( settings_element.options, (opt) => {\n\t\t\t\tsettings_element.items.push(opt[field_value]);\n\t\t\t});\n\t\t}\n\t};\n\n\n\tif (tag_name === 'select') {\n\t\tinit_select();\n\t} else {\n\t\tinit_textbox();\n\t}\n\n\treturn Object.assign( {}, defaults, settings_element, settings_user) as TomSettings;\n};\n", "\nimport MicroEvent from './contrib/microevent';\nimport MicroPlugin from './contrib/microplugin';\nimport { Sifter, iterate } from '@orchidjs/sifter';\nimport { escape_regex } from '@orchidjs/unicode-variants';\nimport { TomInput, TomArgObject, TomOption, TomOptions, TomCreateFilter, TomCreateCallback, TomItem, TomSettings, TomTemplateNames, TomClearFilter, RecursivePartial } from './types/index';\nimport {highlight, removeHighlight} from './contrib/highlight';\nimport * as constants from './constants';\nimport getSettings from './getSettings';\nimport {\n\thash_key,\n\tget_hash,\n\tescape_html,\n\tdebounce_events,\n\tgetSelection,\n\tpreventDefault,\n\taddEvent,\n\tloadDebounce,\n\ttimeout,\n\tisKeyDown,\n\tgetId,\n\taddSlashes,\n\tappend\n} from './utils';\n\nimport {\n\tgetDom,\n\tisHtmlString,\n\tescapeQuery,\n\ttriggerEvent,\n\tapplyCSS,\n\taddClasses,\n\tremoveClasses,\n\tparentMatch,\n\tgetTail,\n\tisEmptyObject,\n\tnodeIndex,\n\tsetAttr,\n\treplaceNode\n} from './vanilla';\n\nvar instance_i = 0;\n\nexport default class TomSelect extends MicroPlugin(MicroEvent){\n\n\tpublic control_input\t\t\t: HTMLInputElement;\n\tpublic wrapper\t\t\t\t\t: HTMLElement;\n\tpublic dropdown\t\t\t\t\t: HTMLElement;\n\tpublic control\t\t\t\t\t: HTMLElement;\n\tpublic dropdown_content\t\t\t: HTMLElement;\n\tpublic focus_node\t\t\t\t: HTMLElement;\n\n\tpublic order\t\t\t\t\t: number = 0;\n\tpublic settings\t\t\t\t\t: TomSettings;\n\tpublic input\t\t\t\t\t: TomInput;\n\tpublic tabIndex\t\t\t\t\t: number;\n\tpublic is_select_tag\t\t\t: boolean;\n\tpublic rtl\t\t\t\t\t\t: boolean;\n\tprivate inputId\t\t\t\t\t: string;\n\n\tprivate _destroy\t\t\t\t!: () => void;\n\tpublic sifter\t\t\t\t\t: Sifter;\n\n\n\tpublic isOpen\t\t\t\t\t: boolean = false;\n\tpublic isDisabled\t\t\t\t: boolean = false;\n\tpublic isReadOnly\t\t\t\t: boolean = false;\n\tpublic isRequired\t\t\t\t: boolean;\n\tpublic isInvalid\t\t\t\t: boolean = false; // @deprecated 1.8\n\tpublic isValid\t\t\t\t\t: boolean = true;\n\tpublic isLocked\t\t\t\t\t: boolean = false;\n\tpublic isFocused\t\t\t\t: boolean = false;\n\tpublic isInputHidden\t\t\t: boolean = false;\n\tpublic isSetup\t\t\t\t\t: boolean = false;\n\tpublic ignoreFocus\t\t\t\t: boolean = false;\n\tpublic ignoreHover\t\t\t\t: boolean = false;\n\tpublic hasOptions\t\t\t\t: boolean = false;\n\tpublic currentResults\t\t\t?: ReturnType<Sifter['search']>;\n\tpublic lastValue\t\t\t\t: string = '';\n\tpublic caretPos\t\t\t\t\t: number = 0;\n\tpublic loading\t\t\t\t\t: number = 0;\n\tpublic loadedSearches\t\t\t: { [key: string]: boolean } = {};\n\n\tpublic activeOption\t\t\t\t: null|HTMLElement = null;\n\tpublic activeItems\t\t\t\t: TomItem[] = [];\n\n\tpublic optgroups\t\t\t\t: TomOptions = {};\n\tpublic options\t\t\t\t\t: TomOptions = {};\n\tpublic userOptions\t\t\t\t: {[key:string]:boolean} = {};\n\tpublic items\t\t\t\t\t: string[] = [];\n\n\tprivate refreshTimeout\t\t\t: null|ReturnType<typeof setTimeout> = null;\n\n\n\tconstructor( input_arg: string|TomInput, user_settings:RecursivePartial<TomSettings> ){\n\t\tsuper();\n\n\t\tinstance_i++;\n\n\t\tvar dir;\n\t\tvar input\t\t\t\t= getDom( input_arg ) as TomInput;\n\n\t\tif( input.tomselect ){\n\t\t\tthrow new Error('Tom Select already initialized on this element');\n\t\t}\n\n\n\t\tinput.tomselect\t\t\t= this;\n\n\n\t\t// detect rtl environment\n\t\tvar computedStyle\t\t= window.getComputedStyle && window.getComputedStyle(input, null);\n\t\tdir\t\t\t\t\t\t= computedStyle.getPropertyValue('direction');\n\n\t\t// setup default state\n\t\tconst settings\t\t\t= getSettings( input, user_settings );\n\t\tthis.settings\t\t\t= settings;\n\t\tthis.input\t\t\t\t= input;\n\t\tthis.tabIndex\t\t\t= input.tabIndex || 0;\n\t\tthis.is_select_tag\t\t= input.tagName.toLowerCase() === 'select';\n\t\tthis.rtl\t\t\t\t= /rtl/i.test(dir);\n\t\tthis.inputId\t\t\t= getId(input, 'tomselect-'+instance_i);\n\t\tthis.isRequired\t\t\t= input.required;\n\n\n\t\t// search system\n\t\tthis.sifter = new Sifter(this.options, {diacritics: settings.diacritics});\n\n\t\t// option-dependent defaults\n\t\tsettings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\t\tif (typeof settings.hideSelected !== 'boolean') {\n\t\t\tsettings.hideSelected = settings.mode === 'multi';\n\t\t}\n\n\t\tif( typeof settings.hidePlaceholder !== 'boolean' ){\n\t\t\tsettings.hidePlaceholder = settings.mode !== 'multi';\n\t\t}\n\n\t\t// set up createFilter callback\n\t\tvar filter = settings.createFilter;\n\t\tif( typeof filter !== 'function' ){\n\n\t\t\tif( typeof filter === 'string' ){\n\t\t\t\tfilter = new RegExp(filter);\n\t\t\t}\n\n\t\t\tif( filter instanceof RegExp ){\n\t\t\t\tsettings.createFilter = (input) => (filter as RegExp).test(input);\n\t\t\t}else{\n\t\t\t\tsettings.createFilter = (value) => {\n\t\t\t\t\treturn this.settings.duplicates || !this.options[value];\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\n\t\tthis.initializePlugins(settings.plugins);\n\t\tthis.setupCallbacks();\n\t\tthis.setupTemplates();\n\n\n\t\t// Create all elements\n\t\tconst wrapper\t\t\t= getDom('<div>');\n\t\tconst control\t\t\t= getDom('<div>');\n\t\tconst dropdown\t\t\t= this._render('dropdown');\n\t\tconst dropdown_content\t= getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n\n\t\tconst classes\t\t\t= this.input.getAttribute('class') || '';\n\t\tconst inputMode\t\t\t= settings.mode;\n\n\t\tvar control_input: HTMLInputElement;\n\n\n\t\taddClasses( wrapper, settings.wrapperClass, classes, inputMode);\n\n\n\t\taddClasses(control,settings.controlClass);\n\t\tappend( wrapper, control );\n\n\n\t\taddClasses(dropdown, settings.dropdownClass, inputMode);\n\t\tif( settings.copyClassesToDropdown ){\n\t\t\taddClasses( dropdown, classes);\n\t\t}\n\n\n\t\taddClasses(dropdown_content, settings.dropdownContentClass);\n\t\tappend( dropdown, dropdown_content );\n\n\t\tgetDom( settings.dropdownParent || wrapper ).appendChild( dropdown );\n\n\n\t\t// default controlInput\n\t\tif( isHtmlString(settings.controlInput) ){\n\t\t\tcontrol_input\t\t= getDom(settings.controlInput ) as HTMLInputElement;\n\n\t\t\t// set attributes\n\t\t\tvar attrs = ['autocorrect','autocapitalize','autocomplete','spellcheck'];\n\t\t\titerate(attrs,(attr:string) => {\n\t\t\t\tif( input.getAttribute(attr) ){\n\t\t\t\t\tsetAttr(control_input,{[attr]:input.getAttribute(attr)});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcontrol_input.tabIndex = -1;\n\t\t\tcontrol.appendChild( control_input );\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t// dom element\n\t\t}else if( settings.controlInput ){\n\t\t\tcontrol_input\t\t= getDom( settings.controlInput ) as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control_input;\n\n\t\t}else{\n\t\t\tcontrol_input\t\t= getDom('<input/>') as HTMLInputElement;\n\t\t\tthis.focus_node\t\t= control;\n\t\t}\n\n\t\tthis.wrapper\t\t\t= wrapper;\n\t\tthis.dropdown\t\t\t= dropdown;\n\t\tthis.dropdown_content\t= dropdown_content;\n\t\tthis.control \t\t\t= control;\n\t\tthis.control_input\t\t= control_input;\n\n\t\tthis.setup();\n\t}\n\n\t/**\n\t * set up event bindings.\n\t *\n\t */\n\tsetup(){\n\n\t\tconst self = this;\n\t\tconst settings\t\t\t\t= self.settings;\n\t\tconst control_input\t\t\t= self.control_input;\n\t\tconst dropdown\t\t\t\t= self.dropdown;\n\t\tconst dropdown_content\t\t= self.dropdown_content;\n\t\tconst wrapper\t\t\t\t= self.wrapper;\n\t\tconst control\t\t\t\t= self.control;\n\t\tconst input\t\t\t\t\t= self.input;\n\t\tconst focus_node\t\t\t= self.focus_node;\n\t\tconst passive_event\t\t\t= { passive: true };\n\t\tconst listboxId\t\t\t\t= self.inputId +'-ts-dropdown';\n\n\n\t\tsetAttr(dropdown_content,{\n\t\t\tid: listboxId\n\t\t});\n\n\t\tsetAttr(focus_node,{\n\t\t\trole:'combobox',\n\t\t\t'aria-haspopup':'listbox',\n\t\t\t'aria-expanded':'false',\n\t\t\t'aria-controls':listboxId\n\t\t});\n\n\t\tconst control_id\t= getId(focus_node,self.inputId + '-ts-control');\n\t\tconst query\t\t\t= \"label[for='\"+escapeQuery(self.inputId)+\"']\";\n\t\tconst label\t\t\t= document.querySelector(query);\n\t\tconst label_click\t= self.focus.bind(self);\n\t\tif( label ){\n\t\t\taddEvent(label,'click', label_click );\n\t\t\tsetAttr(label,{for:control_id});\n\t\t\tconst label_id = getId(label,self.inputId+'-ts-label');\n\t\t\tsetAttr(focus_node,{'aria-labelledby':label_id});\n\t\t\tsetAttr(dropdown_content,{'aria-labelledby':label_id});\n\t\t}\n\n\t\twrapper.style.width = input.style.width;\n\n\t\tif (self.plugins.names.length) {\n\t\t\tconst classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t\t\taddClasses( [wrapper,dropdown], classes_plugins);\n\t\t}\n\n\t\tif ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag ){\n\t\t\tsetAttr(input,{multiple:'multiple'});\n\t\t}\n\n\t\tif (settings.placeholder) {\n\t\t\tsetAttr(control_input,{placeholder:settings.placeholder});\n\t\t}\n\n\t\t// if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\t\tif (!settings.splitOn && settings.delimiter) {\n\t\t\tsettings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n\t\t}\n\n\t\t// debounce user defined load() if loadThrottle > 0\n\t\t// after initializePlugins() so plugins can create/modify user defined loaders\n\t\tif( settings.load && settings.loadThrottle ){\n\t\t\tsettings.load = loadDebounce(settings.load,settings.loadThrottle)\n\t\t}\n\n\t\taddEvent(dropdown,'mousemove', () => {\n\t\t\tself.ignoreHover = false;\n\t\t});\n\n\t\taddEvent(dropdown,'mouseenter', (e) => {\n\n\t\t\tvar target_match = parentMatch(e.target as HTMLElement, '[data-selectable]', dropdown);\n\t\t\tif( target_match ) self.onOptionHover( e as MouseEvent, target_match );\n\n\t\t}, {capture:true});\n\n\t\t// clicking on an option should select it\n\t\taddEvent(dropdown,'click',(evt) => {\n\t\t\tconst option = parentMatch(evt.target as HTMLElement, '[data-selectable]');\n\t\t\tif( option ){\n\t\t\t\tself.onOptionSelect( evt as MouseEvent, option );\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\t\t});\n\n\t\taddEvent(control,'click', (evt) => {\n\n\t\t\tvar target_match = parentMatch( evt.target as HTMLElement, '[data-ts-item]', control);\n\t\t\tif( target_match && self.onItemSelect(evt as MouseEvent, target_match as TomItem) ){\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// retain focus (see control_input mousedown)\n\t\t\tif( control_input.value != '' ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tself.onClick();\n\t\t\tpreventDefault(evt,true);\n\t\t});\n\n\n\t\t// keydown on focus_node for arrow_down/arrow_up\n\t\taddEvent(focus_node,'keydown',\t\t(e) => self.onKeyDown(e as KeyboardEvent) );\n\n\t\t// keypress and input/keyup\n\t\taddEvent(control_input,'keypress',\t(e) => self.onKeyPress(e as KeyboardEvent) );\n\t\taddEvent(control_input,'input',\t\t(e) => self.onInput(e as KeyboardEvent) );\n\t\taddEvent(focus_node,'blur', \t\t(e) => self.onBlur(e as FocusEvent) );\n\t\taddEvent(focus_node,'focus',\t\t(e) => self.onFocus(e as MouseEvent) );\n\t\taddEvent(control_input,'paste',\t\t(e) => self.onPaste(e as MouseEvent) );\n\n\n\t\tconst doc_mousedown = (evt:Event) => {\n\n\t\t\t// blur if target is outside of this instance\n\t\t\t// dropdown is not always inside wrapper\n\t\t\tconst target = evt.composedPath()[0];\n\t\t\tif( !wrapper.contains(target as HTMLElement) && !dropdown.contains(target as HTMLElement) ){\n\t\t\t\tif (self.isFocused) {\n\t\t\t\t\tself.blur();\n\t\t\t\t}\n\t\t\t\tself.inputState();\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\t// retain focus by preventing native handling. if the\n\t\t\t// event target is the input it should not be modified.\n\t\t\t// otherwise, text selection within the input won't work.\n\t\t\t// Fixes bug #212 which is no covered by tests\n\t\t\tif( target == control_input && self.isOpen ){\n\t\t\t\tevt.stopPropagation();\n\n\t\t\t// clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n\t\t\t}else{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t}\n\n\t\t};\n\n\t\tconst win_scroll = () => {\n\t\t\tif (self.isOpen) {\n\t\t\t\tself.positionDropdown();\n\t\t\t}\n\t\t};\n\n\n\t\taddEvent(document,'mousedown', doc_mousedown);\n\t\taddEvent(window,'scroll', win_scroll, passive_event);\n\t\taddEvent(window,'resize', win_scroll, passive_event);\n\n\t\tthis._destroy = () => {\n\t\t\tdocument.removeEventListener('mousedown',doc_mousedown);\n\t\t\twindow.removeEventListener('scroll',win_scroll);\n\t\t\twindow.removeEventListener('resize',win_scroll);\n\t\t\tif( label ) label.removeEventListener('click',label_click);\n\t\t};\n\n\t\t// store original html and tab index so that they can be\n\t\t// restored when the destroy() method is called.\n\t\tthis.revertSettings = {\n\t\t\tinnerHTML : input.innerHTML,\n\t\t\ttabIndex : input.tabIndex\n\t\t};\n\n\n\t\tinput.tabIndex = -1;\n\t\tinput.insertAdjacentElement('afterend', self.wrapper);\n\n\t\tself.sync(false);\n\t\tsettings.items = [];\n\t\tdelete settings.optgroups;\n\t\tdelete settings.options;\n\n\t\taddEvent(input,'invalid', () => {\n\t\t\tif( self.isValid ){\n\t\t\t\tself.isValid = false;\n\t\t\t\tself.isInvalid = true;\n\t\t\t\tself.refreshState();\n\t\t\t}\n\t\t});\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshItems();\n\t\tself.close(false);\n\t\tself.inputState();\n\t\tself.isSetup = true;\n\n\t\tif( input.disabled ){\n\t\t\tself.disable();\n\t\t}else if( input.readOnly ){\n\t\t\tself.setReadOnly(true);\n\t\t}else{\n\t\t\tself.enable(); //sets tabIndex\n\t\t}\n\n\t\tself.on('change', this.onChange);\n\n\t\taddClasses(input,'tomselected','ts-hidden-accessible');\n\t\tself.trigger('initialize');\n\n\t\t// preload options\n\t\tif (settings.preload === true) {\n\t\t\tself.preload();\n\t\t}\n\n\t}\n\n\n\t/**\n\t * Register options and optgroups\n\t *\n\t */\n\tsetupOptions(options:TomOption[] = [], optgroups:TomOption[] = []){\n\n\t\t// build options table\n\t\tthis.addOptions(options);\n\n\n\t\t// build optgroup table\n\t\titerate( optgroups, (optgroup:TomOption) => {\n\t\t\tthis.registerOptionGroup(optgroup);\n\t\t});\n\t}\n\n\t/**\n\t * Sets up default rendering functions.\n\t */\n\tsetupTemplates() {\n\t\tvar self = this;\n\t\tvar field_label = self.settings.labelField;\n\t\tvar field_optgroup = self.settings.optgroupLabelField;\n\n\t\tvar templates = {\n\t\t\t'optgroup': (data:TomOption) => {\n\t\t\t\tlet optgroup = document.createElement('div');\n\t\t\t\toptgroup.className = 'optgroup';\n\t\t\t\toptgroup.appendChild(data.options);\n\t\t\t\treturn optgroup;\n\n\t\t\t},\n\t\t\t'optgroup_header': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t\t\t},\n\t\t\t'option': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'item': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div>' + escape(data[field_label]) + '</div>';\n\t\t\t},\n\t\t\t'option_create': (data:TomOption, escape:typeof escape_html) => {\n\t\t\t\treturn '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t\t\t},\n\t\t\t'no_results':() => {\n\t\t\t\treturn '<div class=\"no-results\">No results found</div>';\n\t\t\t},\n\t\t\t'loading':() => {\n\t\t\t\treturn '<div class=\"spinner\"></div>';\n\t\t\t},\n\t\t\t'not_loading':() => {},\n\t\t\t'dropdown':() => {\n\t\t\t\treturn '<div></div>';\n\t\t\t}\n\t\t};\n\n\n\t\tself.settings.render = Object.assign({}, templates, self.settings.render);\n\t}\n\n\t/**\n\t * Maps fired events to callbacks provided\n\t * in the settings used when creating the control.\n\t */\n\tsetupCallbacks() {\n\t\tvar key, fn;\n\t\tvar callbacks:{[key:string]:string} = {\n\t\t\t'initialize'      : 'onInitialize',\n\t\t\t'change'          : 'onChange',\n\t\t\t'item_add'        : 'onItemAdd',\n\t\t\t'item_remove'     : 'onItemRemove',\n\t\t\t'item_select'     : 'onItemSelect',\n\t\t\t'clear'           : 'onClear',\n\t\t\t'option_add'      : 'onOptionAdd',\n\t\t\t'option_remove'   : 'onOptionRemove',\n\t\t\t'option_clear'    : 'onOptionClear',\n\t\t\t'optgroup_add'    : 'onOptionGroupAdd',\n\t\t\t'optgroup_remove' : 'onOptionGroupRemove',\n\t\t\t'optgroup_clear'  : 'onOptionGroupClear',\n\t\t\t'dropdown_open'   : 'onDropdownOpen',\n\t\t\t'dropdown_close'  : 'onDropdownClose',\n\t\t\t'type'            : 'onType',\n\t\t\t'load'            : 'onLoad',\n\t\t\t'focus'           : 'onFocus',\n\t\t\t'blur'            : 'onBlur'\n\t\t};\n\n\t\tfor (key in callbacks) {\n\n\t\t\tfn = this.settings[callbacks[key] as (keyof TomSettings)];\n\t\t\tif (fn) this.on(key, fn);\n\n\t\t}\n\t}\n\n\t/**\n\t * Sync the Tom Select instance with the original input or select\n\t *\n\t */\n\tsync(get_settings:boolean=true):void{\n\t\tconst self\t\t= this;\n\t\tconst settings\t= get_settings ? getSettings( self.input, {delimiter:self.settings.delimiter} as RecursivePartial<TomSettings> ) : self.settings;\n\n\t\tself.setupOptions(settings.options,settings.optgroups);\n\n\t\tself.setValue(settings.items||[],true); // silent prevents recursion\n\n\t\tself.lastQuery = null; // so updated options will be displayed in dropdown\n\t}\n\n\t/**\n\t * Triggered when the main control element\n\t * has a click event.\n\t *\n\t */\n\tonClick():void {\n\t\tvar self = this;\n\n\t\tif( self.activeItems.length > 0 ){\n\t\t\tself.clearActiveItems();\n\t\t\tself.focus();\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.isFocused && self.isOpen ){\n\t\t\tself.blur();\n\t\t} else {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated v1.7\n\t *\n\t */\n\tonMouseDown():void {}\n\n\t/**\n\t * Triggered when the value of the control has been changed.\n\t * This should propagate the event to the original DOM\n\t * input / select element.\n\t */\n\tonChange() {\n\t\ttriggerEvent(this.input, 'input');\n\t\ttriggerEvent(this.input, 'change');\n\t}\n\n\t/**\n\t * Triggered on <input> paste.\n\t *\n\t */\n\tonPaste(e:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tif( self.isInputHidden || self.isLocked ){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\t// If a regex or string is included, this will split the pasted\n\t\t// input and create Items for each separate value\n\t\tif( !self.settings.splitOn ){\n\t\t\treturn;\n\t\t}\n\n\t\t// Wait for pasted text to be recognized in value\n\t\tsetTimeout(() => {\n\t\t\tvar pastedText = self.inputValue();\n\t\t\tif( !pastedText.match(self.settings.splitOn)){\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tvar splitInput = pastedText.trim().split(self.settings.splitOn);\n\t\t\titerate( splitInput, (piece:string) => {\n\n\t\t\t\tconst hash = hash_key(piece);\n\t\t\t\tif( hash ){\n\t\t\t\t\tif( this.options[piece] ){\n\t\t\t\t\t\tself.addItem(piece);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tself.createItem(piece);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 0);\n\n\t}\n\n\t/**\n\t * Triggered on <input> keypress.\n\t *\n\t */\n\tonKeyPress(e:KeyboardEvent):void {\n\t\tvar self = this;\n\t\tif(self.isLocked){\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t\tvar character = String.fromCharCode(e.keyCode || e.which);\n\t\tif (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t\t\tself.createItem();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keydown.\n\t *\n\t */\n\tonKeyDown(e:KeyboardEvent):void {\n\t\tvar self = this;\n\n\t\tself.ignoreHover = true;\n\n\t\tif (self.isLocked) {\n\t\t\tif (e.keyCode !== constants.KEY_TAB) {\n\t\t\t\tpreventDefault(e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (e.keyCode) {\n\n\t\t\t// ctrl+A: select all\n\t\t\tcase constants.KEY_A:\n\t\t\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\t\t\tif( self.control_input.value == '' ){\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t\tself.selectAll();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\t// esc: close dropdown\n\t\t\tcase constants.KEY_ESC:\n\t\t\t\tif (self.isOpen) {\n\t\t\t\t\tpreventDefault(e,true);\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\n\t\t\t// down: open dropdown or move selection down\n\t\t\tcase constants.KEY_DOWN:\n\t\t\t\tif (!self.isOpen && self.hasOptions) {\n\t\t\t\t\tself.open();\n\t\t\t\t} else if (self.activeOption) {\n\t\t\t\t\tlet next = self.getAdjacent(self.activeOption, 1);\n\t\t\t\t\tif (next) self.setActiveOption(next);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// up: move selection up\n\t\t\tcase constants.KEY_UP:\n\t\t\t\tif (self.activeOption) {\n\t\t\t\t\tlet prev = self.getAdjacent(self.activeOption, -1);\n\t\t\t\t\tif (prev) self.setActiveOption(prev);\n\t\t\t\t}\n\t\t\t\tpreventDefault(e);\n\t\t\t\treturn;\n\n\t\t\t// return: select active option\n\t\t\tcase constants.KEY_RETURN:\n\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// if the option_create=null, the dropdown might be closed\n\t\t\t\t}else if (self.settings.create && self.createItem()) {\n\t\t\t\t\tpreventDefault(e);\n\n\t\t\t\t// don't submit form when searching for a value\n\t\t\t\t}else if( document.activeElement == self.control_input && self.isOpen ){\n\t\t\t\t\tpreventDefault(e);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t// left: modifiy item selection to the left\n\t\t\tcase constants.KEY_LEFT:\n\t\t\t\tself.advanceSelection(-1, e);\n\t\t\t\treturn;\n\n\t\t\t// right: modifiy item selection to the right\n\t\t\tcase constants.KEY_RIGHT:\n\t\t\t\tself.advanceSelection(1, e);\n\t\t\t\treturn;\n\n\t\t\t// tab: select active option and/or create item\n\t\t\tcase constants.KEY_TAB:\n\n\t\t\t\tif( self.settings.selectOnTab ){\n\t\t\t\t\tif( self.canSelect(self.activeOption) ){\n\t\t\t\t\t\tself.onOptionSelect(e,self.activeOption!);\n\n\t\t\t\t\t\t// prevent default [tab] behaviour of jump to the next field\n\t\t\t\t\t\t// if select isFull, then the dropdown won't be open and [tab] will work normally\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t\tif (self.settings.create && self.createItem()) {\n\t\t\t\t\t\tpreventDefault(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\n\t\t\t// delete|backspace: delete items\n\t\t\tcase constants.KEY_BACKSPACE:\n\t\t\tcase constants.KEY_DELETE:\n\t\t\t\tself.deleteSelection(e);\n\t\t\t\treturn;\n\t\t}\n\n\t\t// don't enter text in the control_input when active items are selected\n\t\tif( self.isInputHidden && !isKeyDown(constants.KEY_SHORTCUT,e) ){\n\t\t\tpreventDefault(e);\n\t\t}\n\t}\n\n\t/**\n\t * Triggered on <input> keyup.\n\t *\n\t */\n\tonInput(e:MouseEvent|KeyboardEvent):void {\n\t\t\n\t\tif( this.isLocked ){\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.inputValue();\n\t\tif( this.lastValue === value ) return;\n\t\tthis.lastValue = value;\n\t\t\n\t\tif( value == '' ){\n\t\t\tthis._onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif( this.refreshTimeout ){\n\t\t\tclearTimeout(this.refreshTimeout);\n\t\t}\n\n\t\tthis.refreshTimeout = timeout(()=> {\n\t\t\tthis.refreshTimeout = null;\n\t\t\tthis._onInput();\n\t\t}, this.settings.refreshThrottle);\n\t}\n\n\t_onInput():void {\n\t\tconst value = this.lastValue;\n\n\t\tif( this.settings.shouldLoad.call(this,value) ){\n\t\t\tthis.load(value);\n\t\t}\n\n\t\tthis.refreshOptions();\n\t\tthis.trigger('type', value);\n\t}\n\n\t/**\n\t * Triggered when the user rolls over\n\t * an option in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionHover( evt:MouseEvent|KeyboardEvent, option:HTMLElement ):void{\n\t\tif( this.ignoreHover ) return;\n\t\tthis.setActiveOption(option, false);\n\t}\n\n\t/**\n\t * Triggered on <input> focus.\n\t *\n\t */\n\tonFocus(e?:MouseEvent|KeyboardEvent):void {\n\t\tvar self = this;\n\t\tvar wasFocused = self.isFocused;\n\n\t\tif( self.isDisabled || self.isReadOnly ){\n\t\t\tself.blur();\n\t\t\tpreventDefault(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (self.ignoreFocus) return;\n\t\tself.isFocused = true;\n\t\tif( self.settings.preload === 'focus' ) self.preload();\n\n\t\tif (!wasFocused) self.trigger('focus');\n\n\t\tif (!self.activeItems.length) {\n\t\t\tself.inputState();\n\t\t\tself.refreshOptions(!!self.settings.openOnFocus);\n\t\t}\n\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Triggered on <input> blur.\n\t *\n\t */\n\tonBlur(e?:FocusEvent):void {\n\n\t\tif( document.hasFocus() === false ) return;\n\n\t\tvar self = this;\n\t\tif (!self.isFocused) return;\n\t\tself.isFocused = false;\n\t\tself.ignoreFocus = false;\n\n\t\tvar deactivate = () => {\n\t\t\tself.close();\n\t\t\tself.setActiveItem();\n\t\t\tself.setCaret(self.items.length);\n\t\t\tself.trigger('blur');\n\t\t};\n\n\t\tif (self.settings.create && self.settings.createOnBlur) {\n\t\t\tself.createItem(null, deactivate);\n\t\t} else {\n\t\t\tdeactivate();\n\t\t}\n\t}\n\n\n\t/**\n\t * Triggered when the user clicks on an option\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\tonOptionSelect( evt:MouseEvent|KeyboardEvent, option:HTMLElement ){\n\t\tvar value, self = this;\n\n\n\t\t// should not be possible to trigger a option under a disabled optgroup\n\t\tif( option.parentElement && option.parentElement.matches('[data-disabled]') ){\n\t\t\treturn;\n\t\t}\n\n\n\t\tif( option.classList.contains('create') ){\n\t\t\tself.createItem(null, () => {\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tvalue = option.dataset.value;\n\t\t\tif (typeof value !== 'undefined') {\n\t\t\t\tself.lastQuery = null;\n\t\t\t\tself.addItem(value);\n\t\t\t\tif (self.settings.closeAfterSelect) {\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( !self.settings.hideSelected && evt.type && /click/.test(evt.type) ){\n\t\t\t\t\tself.setActiveOption(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return true if the given option can be selected\n\t *\n\t */\n\tcanSelect(option:HTMLElement|null):boolean{\n\n\t\tif( this.isOpen && option && this.dropdown_content.contains(option) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Triggered when the user clicks on an item\n\t * that has been selected.\n\t *\n\t */\n\tonItemSelect( evt?:MouseEvent, item?:TomItem ):boolean{\n\t\tvar self = this;\n\n\t\tif( !self.isLocked && self.settings.mode === 'multi' ){\n\t\t\tpreventDefault(evt);\n\t\t\tself.setActiveItem(item, evt);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Determines whether or not to invoke\n\t * the user-provided option provider / loader\n\t *\n\t * Note, there is a subtle difference between\n\t * this.canLoad() and this.settings.shouldLoad();\n\t *\n\t *\t- settings.shouldLoad() is a user-input validator.\n\t *\tWhen false is returned, the not_loading template\n\t *\twill be added to the dropdown\n\t *\n\t *\t- canLoad() is lower level validator that checks\n\t * \tthe Tom Select instance. There is no inherent user\n\t *\tfeedback when canLoad returns false\n\t *\n\t */\n\tcanLoad(value:string):boolean{\n\n\t\tif( !this.settings.load ) return false;\n\t\tif( this.loadedSearches.hasOwnProperty(value) ) return false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Invokes the user-provided option provider / loader.\n\t *\n\t */\n\tload(value:string):void {\n\t\tconst self = this;\n\n\t\tif( !self.canLoad(value) ) return;\n\n\t\taddClasses(self.wrapper,self.settings.loadingClass);\n\t\tself.loading++;\n\n\t\tconst callback = self.loadCallback.bind(self);\n\t\tself.settings.load.call(self, value, callback);\n\t}\n\n\t/**\n\t * Invoked by the user-provided option provider\n\t *\n\t */\n\tloadCallback( options:TomOption[], optgroups:TomOption[] ):void{\n\t\tconst self = this;\n\t\tself.loading = Math.max(self.loading - 1, 0);\n\t\tself.lastQuery = null;\n\n\t\tself.clearActiveOption(); // when new results load, focus should be on first option\n\t\tself.setupOptions(options,optgroups);\n\n\t\tself.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t\tif (!self.loading) {\n\t\t\tremoveClasses(self.wrapper,self.settings.loadingClass);\n\t\t}\n\n\t\tself.trigger('load', options, optgroups);\n\t}\n\n\tpreload():void{\n\t\tvar classList = this.wrapper.classList;\n\t\tif( classList.contains('preloaded') ) return;\n\t\tclassList.add('preloaded');\n\t\tthis.load('');\n\t}\n\n\n\t/**\n\t * Sets the input field of the control to the specified value.\n\t *\n\t */\n\tsetTextboxValue(value:string = '') {\n\t\tvar input = this.control_input;\n\t\tvar changed = input.value !== value;\n\t\tif (changed) {\n\t\t\tinput.value = value;\n\t\t\ttriggerEvent(input,'update');\n\t\t\tthis.lastValue = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the value of the control. If multiple items\n\t * can be selected (e.g. <select multiple>), this returns\n\t * an array. If only one item can be selected, this\n\t * returns a string.\n\t *\n\t */\n\tgetValue():string|string[] {\n\n\t\tif( this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t\t\treturn this.items;\n\t\t}\n\n\t\treturn this.items.join(this.settings.delimiter);\n\t}\n\n\t/**\n\t * Resets the selected items to the given value.\n\t *\n\t */\n\tsetValue( value:string|string[], silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change'];\n\n\t\tdebounce_events(this, events,() => {\n\t\t\tthis.clear(silent);\n\t\t\tthis.addItems(value, silent);\n\t\t});\n\t}\n\n\n\t/**\n\t * Resets the number of max items to the given value\n\t *\n\t */\n\tsetMaxItems(value:null|number){\n\t\tif(value === 0) value = null; //reset to unlimited items.\n\t\tthis.settings.maxItems = value;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Sets the selected item.\n\t *\n\t */\n\tsetActiveItem( item?:TomItem, e?:MouseEvent|KeyboardEvent ){\n\t\tvar self = this;\n\t\tvar eventName;\n\t\tvar i, begin, end, swap;\n\t\tvar last;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\t// clear the active selection\n\t\tif( !item ){\n\t\t\tself.clearActiveItems();\n\t\t\tif (self.isFocused) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// modify selection\n\t\teventName = e && e.type.toLowerCase();\n\n\t\tif (eventName === 'click' && isKeyDown('shiftKey',e) && self.activeItems.length) {\n\t\t\tlast\t= self.getLastActive();\n\t\t\tbegin\t= Array.prototype.indexOf.call(self.control.children, last);\n\t\t\tend\t\t= Array.prototype.indexOf.call(self.control.children, item);\n\n\t\t\tif (begin > end) {\n\t\t\t\tswap  = begin;\n\t\t\t\tbegin = end;\n\t\t\t\tend   = swap;\n\t\t\t}\n\t\t\tfor (i = begin; i <= end; i++) {\n\t\t\t\titem = self.control.children[i] as TomItem;\n\t\t\t\tif (self.activeItems.indexOf(item) === -1) {\n\t\t\t\t\tself.setActiveItemClass(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\tpreventDefault(e);\n\t\t} else if ((eventName === 'click' && isKeyDown(constants.KEY_SHORTCUT,e) ) || (eventName === 'keydown' && isKeyDown('shiftKey',e))) {\n\t\t\tif( item.classList.contains('active') ){\n\t\t\t\tself.removeActiveItem( item );\n\t\t\t} else {\n\t\t\t\tself.setActiveItemClass(item);\n\t\t\t}\n\t\t} else {\n\t\t\tself.clearActiveItems();\n\t\t\tself.setActiveItemClass(item);\n\t\t}\n\n\t\t// ensure control has focus\n\t\tself.inputState();\n\t\tif (!self.isFocused) {\n\t\t\tself.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Set the active and last-active classes\n\t *\n\t */\n\tsetActiveItemClass( item:TomItem ){\n\t\tconst self = this;\n\t\tconst last_active = self.control.querySelector('.last-active');\n\t\tif( last_active ) removeClasses(last_active as HTMLElement,'last-active');\n\n\t\taddClasses(item,'active last-active');\n\t\tself.trigger('item_select', item);\n\t\tif( self.activeItems.indexOf(item) == -1 ){\n\t\t\tself.activeItems.push( item );\n\t\t}\n\t}\n\n\t/**\n\t * Remove active item\n\t *\n\t */\n\tremoveActiveItem( item:TomItem ){\n\t\tvar idx = this.activeItems.indexOf(item);\n\t\tthis.activeItems.splice(idx, 1);\n\t\tremoveClasses(item,'active');\n\t}\n\n\t/**\n\t * Clears all the active items\n\t *\n\t */\n\tclearActiveItems(){\n\t\tremoveClasses(this.activeItems,'active');\n\t\tthis.activeItems = [];\n\t}\n\n\t/**\n\t * Sets the selected item in the dropdown menu\n\t * of available options.\n\t *\n\t */\n\tsetActiveOption( option:null|HTMLElement,scroll:boolean=true ):void{\n\n\t\tif( option === this.activeOption ){\n\t\t\treturn;\n\t\t}\n\n\t\tthis.clearActiveOption();\n\t\tif( !option ) return;\n\n\t\tthis.activeOption = option;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':option.getAttribute('id')});\n\t\tsetAttr(option,{'aria-selected':'true'});\n\t\taddClasses(option,'active');\n\t\tif( scroll ) this.scrollToOption(option);\n\t}\n\n\t/**\n\t * Sets the dropdown_content scrollTop to display the option\n\t *\n\t */\n\tscrollToOption( option:null|HTMLElement, behavior?:string ):void{\n\n\t\tif( !option ) return;\n\n\t\tconst content\t\t= this.dropdown_content;\n\t\tconst height_menu\t= content.clientHeight;\n\t\tconst scrollTop\t\t= content.scrollTop || 0;\n\t\tconst height_item\t= option.offsetHeight;\n\t\tconst y\t\t\t\t= option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t\tif (y + height_item > height_menu + scrollTop) {\n\t\t\tthis.scroll(y - height_menu + height_item, behavior);\n\n\t\t} else if (y < scrollTop) {\n\t\t\tthis.scroll(y, behavior);\n\t\t}\n\t}\n\n\t/**\n\t * Scroll the dropdown to the given position\n\t *\n\t */\n\tscroll( scrollTop:number, behavior?:string ):void{\n\t\tconst content = this.dropdown_content;\n\t\tif( behavior ){\n\t\t\tcontent.style.scrollBehavior = behavior;\n\t\t}\n\t\tcontent.scrollTop = scrollTop;\n\t\tcontent.style.scrollBehavior = '';\n\t}\n\n\t/**\n\t * Clears the active option\n\t *\n\t */\n\tclearActiveOption(){\n\t\tif( this.activeOption ){\n\t\t\tremoveClasses(this.activeOption,'active');\n\t\t\tsetAttr(this.activeOption,{'aria-selected':null});\n\t\t}\n\t\tthis.activeOption = null;\n\t\tsetAttr(this.focus_node,{'aria-activedescendant':null});\n\t}\n\n\n\t/**\n\t * Selects all items (CTRL + A).\n\t */\n\tselectAll() {\n\t\tconst self = this;\n\n\t\tif (self.settings.mode === 'single') return;\n\n\t\tconst activeItems = self.controlChildren();\n\n\t\tif( !activeItems.length ) return;\n\n\t\tself.inputState();\n\t\tself.close();\n\n\t\tself.activeItems = activeItems;\n\t\titerate( activeItems, (item:TomItem) => {\n\t\t\tself.setActiveItemClass(item);\n\t\t});\n\n\t}\n\n\t/**\n\t * Determines if the control_input should be in a hidden or visible state\n\t *\n\t */\n\tinputState(){\n\t\tvar self = this;\n\n\t\tif( !self.control.contains(self.control_input) ) return;\n\n\t\tsetAttr(self.control_input,{placeholder:self.settings.placeholder});\n\n\t\tif( self.activeItems.length > 0 || (!self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) ){\n\t\t\tself.setTextboxValue();\n\t\t\tself.isInputHidden = true;\n\n\t\t}else{\n\n\t\t\tif( self.settings.hidePlaceholder && self.items.length > 0 ){\n\t\t\t\tsetAttr(self.control_input,{placeholder:''});\n\t\t\t}\n\t\t\tself.isInputHidden = false;\n\t\t}\n\n\t\tself.wrapper.classList.toggle('input-hidden', self.isInputHidden );\n\t}\n\n\t/**\n\t * Get the input value\n\t */\n\tinputValue(){\n\t\treturn this.control_input.value.trim();\n\t}\n\n\t/**\n\t * Gives the control focus.\n\t */\n\tfocus() {\n\t\tvar self = this;\n\t\tif( self.isDisabled || self.isReadOnly) return;\n\n\t\tself.ignoreFocus = true;\n\n\t\tif( self.control_input.offsetWidth ){\n\t\t\tself.control_input.focus();\n\t\t}else{\n\t\t\tself.focus_node.focus();\n\t\t}\n\n\t\tsetTimeout(() => {\n\t\t\tself.ignoreFocus = false;\n\t\t\tself.onFocus();\n\t\t}, 0);\n\t}\n\n\t/**\n\t * Forces the control out of focus.\n\t *\n\t */\n\tblur():void {\n\t\tthis.focus_node.blur();\n\t\tthis.onBlur();\n\t}\n\n\t/**\n\t * Returns a function that scores an object\n\t * to show how good of a match it is to the\n\t * provided query.\n\t *\n\t * @return {function}\n\t */\n\tgetScoreFunction(query:string) {\n\t\treturn this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t}\n\n\t/**\n\t * Returns search options for sifter (the system\n\t * for scoring and sorting results).\n\t *\n\t * @see https://github.com/orchidjs/sifter.js\n\t * @return {object}\n\t */\n\tgetSearchOptions() {\n\t\tvar settings = this.settings;\n\t\tvar sort = settings.sortField;\n\t\tif (typeof settings.sortField === 'string') {\n\t\t\tsort = [{field: settings.sortField}];\n\t\t}\n\n\t\treturn {\n\t\t\tfields      : settings.searchField,\n\t\t\tconjunction : settings.searchConjunction,\n\t\t\tsort        : sort,\n\t\t\tnesting     : settings.nesting\n\t\t};\n\t}\n\n\t/**\n\t * Searches through available options and returns\n\t * a sorted array of matches.\n\t *\n\t */\n\tsearch(query:string) : ReturnType<Sifter['search']>{\n\t\tvar result, calculateScore;\n\t\tvar self     = this;\n\t\tvar options  = this.getSearchOptions();\n\n\t\t// validate user-provided result scoring function\n\t\tif ( self.settings.score ){\n\t\t\tcalculateScore = self.settings.score.call(self,query);\n\t\t\tif (typeof calculateScore !== 'function') {\n\t\t\t\tthrow new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t\t\t}\n\t\t}\n\n\t\t// perform search\n\t\tif (query !== self.lastQuery) {\n\t\t\tself.lastQuery\t\t\t= query;\n\t\t\tresult\t\t\t\t\t= self.sifter.search(query, Object.assign(options, {score: calculateScore}));\n\t\t\tself.currentResults\t\t= result;\n\t\t} else {\n\t\t\tresult\t\t\t\t\t= Object.assign( {}, self.currentResults);\n\t\t}\n\n\t\t// filter out selected items\n\t\tif( self.settings.hideSelected ){\n\t\t\tresult.items = result.items.filter((item) => {\n\t\t\t\tlet hashed = hash_key(item.id);\n\t\t\t\treturn !(hashed && self.items.indexOf(hashed) !== -1 );\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Refreshes the list of available options shown\n\t * in the autocomplete dropdown menu.\n\t *\n\t */\n\trefreshOptions( triggerDropdown:boolean = true ){\n\t\tvar i, j, k, n, optgroup, optgroups, html:DocumentFragment, has_create_option, active_group;\n\t\tvar create;\n\n\t\ttype Group = {fragment:DocumentFragment,order:number,optgroup:string}\n\t\tconst groups: {[key:string]:number} = {};\n\t\tconst groups_order:Group[]\t= [];\n\n\t\tvar self\t\t\t\t\t= this;\n\t\tvar query\t\t\t\t\t= self.inputValue();\n\t\tconst same_query\t\t\t= query === self.lastQuery || (query == '' && self.lastQuery == null);\n\t\tvar results\t\t\t\t\t= self.search(query);\n\t\tvar active_option:HTMLElement|null = null;\n\t\tvar show_dropdown\t\t\t= self.settings.shouldOpen || false;\n\t\tvar dropdown_content\t\t= self.dropdown_content;\n\n\n\t\tif( same_query ){\n\t\t\tactive_option\t\t\t= self.activeOption;\n\n\t\t\tif( active_option ){\n\t\t\t\tactive_group = active_option.closest('[data-group]') as HTMLElement;\n\t\t\t}\n\t\t}\n\n\t\t// build markup\n\t\tn = results.items.length;\n\t\tif (typeof self.settings.maxOptions === 'number') {\n\t\t\tn = Math.min(n, self.settings.maxOptions);\n\t\t}\n\n\t\tif( n > 0 ){\n\t\t\tshow_dropdown = true;\n\t\t}\n\n\t\t// get fragment for group and the position of the group in group_order\n\t\tconst getGroupFragment = (optgroup:string,order:number):[number,DocumentFragment] => {\n\n\t\t\tlet group_order_i = groups[optgroup];\n\n\t\t\tif( group_order_i !== undefined ){\n\t\t\t\tlet order_group = groups_order[group_order_i];\n\t\t\t\tif( order_group !== undefined ){\n\t\t\t\t\treturn [group_order_i,order_group.fragment];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet group_fragment = document.createDocumentFragment();\n\t\t\tgroup_order_i = groups_order.length;\n\t\t\tgroups_order.push({fragment:group_fragment,order,optgroup});\n\n\t\t\treturn [group_order_i,group_fragment]\n\t\t}\n\n\t\t// render and group available options individually\n\t\tfor (i = 0; i < n; i++) {\n\n\t\t\t// get option dom element\n\t\t\tlet item\t\t\t= results.items[i];\n\t\t\tif( !item ) continue;\n\n\t\t\tlet opt_value\t\t= item.id;\n\t\t\tlet option\t\t\t= self.options[opt_value];\n\n\t\t\tif( option === undefined ) continue;\n\n\t\t\tlet opt_hash\t\t= get_hash(opt_value);\n\t\t\tlet option_el\t\t= self.getOption(opt_hash,true) as HTMLElement;\n\n\t\t\t// toggle 'selected' class\n\t\t\tif( !self.settings.hideSelected ){\n\t\t\t\toption_el.classList.toggle('selected', self.items.includes(opt_hash) );\n\t\t\t}\n\n\t\t\toptgroup    = option[self.settings.optgroupField] || '';\n\t\t\toptgroups   = Array.isArray(optgroup) ? optgroup : [optgroup];\n\t\t\t\n\n\t\t\tfor (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t\t\t\toptgroup = optgroups[j];\n\n\t\t\t\tlet order = option.$order;\n\t\t\t\tlet self_optgroup = self.optgroups[optgroup];\n\t\t\t\tif( self_optgroup === undefined ){\t\t\t\t\t\n\t\t\t\t\toptgroup = '';\n\t\t\t\t}else{\n\t\t\t\t\torder = self_optgroup.$order;\n\t\t\t\t}\n\n\t\t\t\tconst [group_order_i,group_fragment] = getGroupFragment(optgroup,order);\n\n\n\t\t\t\t// nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\t\t\t\tif( j > 0 ){\n\t\t\t\t\toption_el = option_el.cloneNode(true) as HTMLElement;\n\t\t\t\t\tsetAttr(option_el,{id: option.$id+'-clone-'+j,'aria-selected':null});\n\t\t\t\t\toption_el.classList.add('ts-cloned');\n\t\t\t\t\tremoveClasses(option_el,'active');\n\n\n\t\t\t\t\t// make sure we keep the activeOption in the same group\n\t\t\t\t\tif( self.activeOption && self.activeOption.dataset.value == opt_value ){\n\t\t\t\t\t\tif( active_group && active_group.dataset.group === optgroup.toString() ){\n\t\t\t\t\t\t\tactive_option = option_el;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\tgroup_fragment.appendChild(option_el);\n\t\t\t\tif( optgroup != '' ){\n\t\t\t\t\tgroups[optgroup] = group_order_i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// sort optgroups\n\t\tif( self.settings.lockOptgroupOrder ){\n\t\t\tgroups_order.sort((a, b) => {\n\t\t\t\treturn a.order - b.order;\n\t\t\t});\n\t\t}\n\n\t\t// render optgroup headers & join groups\n\t\thtml = document.createDocumentFragment();\n\t\titerate( groups_order, (group_order:Group) => {\n\n\t\t\tlet group_fragment = group_order.fragment;\n\t\t\tlet optgroup = group_order.optgroup\n\n\t\t\tif( !group_fragment || !group_fragment.children.length ) return;\n\n\t\t\tlet group_heading = self.optgroups[optgroup];\n\n\t\t\tif( group_heading !== undefined ){\n\n\t\t\t\tlet group_options = document.createDocumentFragment();\n\t\t\t\tlet header = self.render('optgroup_header', group_heading);\n\t\t\t\tappend( group_options, header );\n\t\t\t\tappend( group_options, group_fragment );\n\n\t\t\t\tlet group_html = self.render('optgroup', {group:group_heading,options:group_options} );\n\n\t\t\t\tappend( html, group_html );\n\n\t\t\t} else {\n\t\t\t\tappend( html, group_fragment );\n\t\t\t}\n\t\t});\n\n\t\tdropdown_content.innerHTML = '';\n\t\tappend( dropdown_content, html );\n\n\t\t// highlight matching terms inline\n\t\tif (self.settings.highlight) {\n\t\t\tremoveHighlight( dropdown_content );\n\t\t\tif (results.query.length && results.tokens.length) {\n\t\t\t\titerate( results.tokens, (tok) => {\n\t\t\t\t\thighlight( dropdown_content, tok.regex);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// helper method for adding templates to dropdown\n\t\tvar add_template = (template:TomTemplateNames) => {\n\t\t\tlet content = self.render(template,{input:query});\n\t\t\tif( content ){\n\t\t\t\tshow_dropdown = true;\n\t\t\t\tdropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t\t\t}\n\t\t\treturn content;\n\t\t};\n\n\n\t\t// add loading message\n\t\tif( self.loading ){\n\t\t\tadd_template('loading');\n\n\t\t// invalid query\n\t\t}else if( !self.settings.shouldLoad.call(self,query) ){\n\t\t\tadd_template('not_loading');\n\n\t\t// add no_results message\n\t\t}else if( results.items.length === 0 ){\n\t\t\tadd_template('no_results');\n\n\t\t}\n\n\n\n\t\t// add create option\n\t\thas_create_option = self.canCreate(query);\n\t\tif (has_create_option) {\n\t\t\tcreate = add_template('option_create');\n\t\t}\n\n\n\t\t// activate\n\t\tself.hasOptions = results.items.length > 0 || has_create_option;\n\t\tif( show_dropdown ){\n\n\t\t\tif (results.items.length > 0) {\n\n\t\t\t\tif( !active_option && self.settings.mode === 'single' && self.items[0] != undefined ){\n\t\t\t\t\tactive_option = self.getOption(self.items[0]);\n\t\t\t\t}\n\n\t\t\t\tif( !dropdown_content.contains(active_option)  ){\n\n\t\t\t\t\tlet active_index = 0;\n\t\t\t\t\tif( create && !self.settings.addPrecedence ){\n\t\t\t\t\t\tactive_index = 1;\n\t\t\t\t\t}\n\t\t\t\t\tactive_option = self.selectable()[active_index] as HTMLElement;\n\t\t\t\t}\n\n\t\t\t}else if( create ){\n\t\t\t\tactive_option = create;\n\t\t\t}\n\n\t\t\tif( triggerDropdown && !self.isOpen ){\n\t\t\t\tself.open();\n\t\t\t\tself.scrollToOption(active_option,'auto');\n\t\t\t}\n\t\t\tself.setActiveOption(active_option);\n\n\t\t}else{\n\t\t\tself.clearActiveOption();\n\t\t\tif( triggerDropdown && self.isOpen ){\n\t\t\t\tself.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Return list of selectable options\n\t *\n\t */\n\tselectable():NodeList{\n\t\treturn this.dropdown_content.querySelectorAll('[data-selectable]');\n\t}\n\n\n\n\t/**\n\t * Adds an available option. If it already exists,\n\t * nothing will happen. Note: this does not refresh\n\t * the options list dropdown (use `refreshOptions`\n\t * for that).\n\t *\n\t * Usage:\n\t *\n\t *   this.addOption(data)\n\t *\n\t */\n\taddOption( data:TomOption, user_created = false ):false|string {\n\t\tconst self = this;\n\n\t\t// @deprecated 1.7.7\n\t\t// use addOptions( array, user_created ) for adding multiple options\n\t\tif( Array.isArray(data) ){\n\t\t\tself.addOptions( data, user_created);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst key = hash_key(data[self.settings.valueField]);\n\t\tif( key === null || self.options.hasOwnProperty(key) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tdata.$order\t\t\t= data.$order || ++self.order;\n\t\tdata.$id\t\t\t= self.inputId + '-opt-' + data.$order;\n\t\tself.options[key]\t= data;\n\t\tself.lastQuery\t\t= null;\n\n\t\tif( user_created ){\n\t\t\tself.userOptions[key] = user_created;\n\t\t\tself.trigger('option_add', key, data);\n\t\t}\n\n\t\treturn key;\n\t}\n\n\t/**\n\t * Add multiple options\n\t *\n\t */\n\taddOptions( data:TomOption[], user_created = false ):void{\n\t\titerate( data, (dat:TomOption) => {\n\t\t\tthis.addOption(dat, user_created);\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated 1.7.7\n\t */\n\tregisterOption( data:TomOption ):false|string {\n\t\treturn this.addOption(data);\n\t}\n\n\t/**\n\t * Registers an option group to the pool of option groups.\n\t *\n\t * @return {boolean|string}\n\t */\n\tregisterOptionGroup(data:TomOption) {\n\t\tvar key = hash_key(data[this.settings.optgroupValueField]);\n\n\t\tif ( key === null ) return false;\n\n\t\tdata.$order = data.$order || ++this.order;\n\t\tthis.optgroups[key] = data;\n\t\treturn key;\n\t}\n\n\t/**\n\t * Registers a new optgroup for options\n\t * to be bucketed into.\n\t *\n\t */\n\taddOptionGroup(id:string, data:TomOption) {\n\t\tvar hashed_id;\n\t\tdata[this.settings.optgroupValueField] = id;\n\n\t\tif( hashed_id = this.registerOptionGroup(data) ){\n\t\t\tthis.trigger('optgroup_add', hashed_id, data);\n\t\t}\n\t}\n\n\t/**\n\t * Removes an existing option group.\n\t *\n\t */\n\tremoveOptionGroup(id:string) {\n\t\tif (this.optgroups.hasOwnProperty(id)) {\n\t\t\tdelete this.optgroups[id];\n\t\t\tthis.clearCache();\n\t\t\tthis.trigger('optgroup_remove', id);\n\t\t}\n\t}\n\n\t/**\n\t * Clears all existing option groups.\n\t */\n\tclearOptionGroups() {\n\t\tthis.optgroups = {};\n\t\tthis.clearCache();\n\t\tthis.trigger('optgroup_clear');\n\t}\n\n\t/**\n\t * Updates an option available for selection. If\n\t * it is visible in the selected items or options\n\t * dropdown, it will be re-rendered automatically.\n\t *\n\t */\n\tupdateOption(value:string, data:TomOption) {\n\t\tconst self = this;\n\t\tvar item_new;\n\t\tvar index_item;\n\n\t\tconst value_old\t\t= hash_key(value);\n\t\tconst value_new\t\t= hash_key(data[self.settings.valueField]);\n\n\t\t// sanity checks\n\t\tif( value_old === null ) return;\n\n\t\tconst data_old\t\t= self.options[value_old];\n\n\t\tif( data_old == undefined ) return;\n\t\tif( typeof value_new !== 'string' ) throw new Error('Value must be set in option data');\n\n\n\t\tconst option\t\t= self.getOption(value_old);\n\t\tconst item\t\t\t= self.getItem(value_old);\n\n\n\t\tdata.$order = data.$order || data_old.$order;\n\t\tdelete self.options[value_old];\n\n\t\t// invalidate render cache\n\t\t// don't remove existing node yet, we'll remove it after replacing it\n\t\tself.uncacheValue(value_new);\n\n\t\tself.options[value_new] = data;\n\n\t\t// update the option if it's in the dropdown\n\t\tif( option ){\n\t\t\tif( self.dropdown_content.contains(option) ){\n\n\t\t\t\tconst option_new\t= self._render('option', data);\n\t\t\t\treplaceNode(option, option_new);\n\n\t\t\t\tif( self.activeOption === option ){\n\t\t\t\t\tself.setActiveOption(option_new);\n\t\t\t\t}\n\t\t\t}\n\t\t\toption.remove();\n\t\t}\n\n\t\t// update the item if we have one\n\t\tif( item ){\n\t\t\tindex_item = self.items.indexOf(value_old);\n\t\t\tif (index_item !== -1) {\n\t\t\t\tself.items.splice(index_item, 1, value_new);\n\t\t\t}\n\n\t\t\titem_new\t= self._render('item', data);\n\n\t\t\tif( item.classList.contains('active') ) addClasses(item_new,'active');\n\n\t\t\treplaceNode( item, item_new);\n\t\t}\n\n\t\t// invalidate last query because we might have updated the sortField\n\t\tself.lastQuery = null;\n\t}\n\n\t/**\n\t * Removes a single option.\n\t *\n\t */\n\tremoveOption(value:string, silent?:boolean):void {\n\t\tconst self = this;\n\t\tvalue = get_hash(value);\n\n\t\tself.uncacheValue(value);\n\n\t\tdelete self.userOptions[value];\n\t\tdelete self.options[value];\n\t\tself.lastQuery = null;\n\t\tself.trigger('option_remove', value);\n\t\tself.removeItem(value, silent);\n\t}\n\n\t/**\n\t * Clears all options.\n\t */\n\tclearOptions(filter?:TomClearFilter ) {\n\n\t\tconst boundFilter = (filter || this.clearFilter).bind(this);\n\n\t\tthis.loadedSearches\t\t= {};\n\t\tthis.userOptions\t\t= {};\n\t\tthis.clearCache();\n\n\t\tconst selected:TomOptions\t= {};\n\t\titerate(this.options,(option:TomOption,key:string)=>{\n\t\t\tif( boundFilter(option,key as string) ){\n\t\t\t\tselected[key] = option;\n\t\t\t}\n\t\t});\n\n\t\tthis.options = this.sifter.items = selected;\n\t\tthis.lastQuery = null;\n\t\tthis.trigger('option_clear');\n\t}\n\n\t/**\n\t * Used by clearOptions() to decide whether or not an option should be removed\n\t * Return true to keep an option, false to remove\n\t *\n\t */\n\tclearFilter(option:TomOption,value:string){\n\t\tif( this.items.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the dom element of the option\n\t * matching the given value.\n\t *\n\t */\n\tgetOption(value:undefined|null|boolean|string|number, create:boolean=false):null|HTMLElement {\n\n\t\tconst hashed = hash_key(value);\n\t\tif( hashed === null ) return null;\n\n\t\tconst option = this.options[hashed];\n\t\tif( option != undefined ){\n\n\t\t\tif( option.$div ){\n\t\t\t\treturn option.$div;\n\t\t\t}\n\n\t\t\tif( create ){\n\t\t\t\treturn this._render('option', option);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns the dom element of the next or previous dom element of the same type\n\t * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t *\n\t */\n\tgetAdjacent( option:null|HTMLElement, direction:number, type:string = 'option' ) : HTMLElement|null{\n\t\tvar self = this, all;\n\n\t\tif( !option ){\n\t\t\treturn null;\n\t\t}\n\n\t\tif( type == 'item' ){\n\t\t\tall\t\t\t= self.controlChildren();\n\t\t}else{\n\t\t\tall\t\t\t= self.dropdown_content.querySelectorAll('[data-selectable]');\n\t\t}\n\n\t\tfor( let i = 0; i < all.length; i++ ){\n\t\t\tif( all[i] != option ){\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif( direction > 0 ){\n\t\t\t\treturn all[i+1] as HTMLElement;\n\t\t\t}\n\n\t\t\treturn all[i-1] as HTMLElement;\n\t\t}\n\t\treturn null;\n\t}\n\n\n\t/**\n\t * Returns the dom element of the item\n\t * matching the given value.\n\t *\n\t */\n\tgetItem(item:string|TomItem|null):null|TomItem {\n\n\t\tif( typeof item == 'object' ){\n\t\t\treturn item;\n\t\t}\n\n\t\tvar value = hash_key(item);\n\t\treturn value !== null\n\t\t\t? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`)\n\t\t\t: null;\n\t}\n\n\t/**\n\t * \"Selects\" multiple items at once. Adds them to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItems( values:string|string[], silent?:boolean ):void{\n\t\tvar self = this;\n\n\t\tvar items = Array.isArray(values) ? values : [values];\n\t\titems = items.filter(x => self.items.indexOf(x) === -1);\n\t\tconst last_item = items[items.length - 1];\n\t\titems.forEach(item => {\n\t\t\tself.isPending = (item !== last_item);\n\t\t\tself.addItem(item, silent);\n\t\t});\n\t}\n\n\t/**\n\t * \"Selects\" an item. Adds it to the list\n\t * at the current caret position.\n\t *\n\t */\n\taddItem( value:string, silent?:boolean ):void{\n\t\tvar events = silent ? [] : ['change','dropdown_close'];\n\n\t\tdebounce_events(this, events, () => {\n\t\t\tvar item, wasFull;\n\t\t\tconst self = this;\n\t\t \tconst inputMode = self.settings.mode;\n\t\t\tconst hashed = hash_key(value);\n\n\t\t\tif( hashed && self.items.indexOf(hashed) !== -1 ){\n\n\t\t\t\tif( inputMode === 'single' ){\n\t\t\t\t\tself.close();\n\t\t\t\t}\n\n\t\t\t\tif( inputMode === 'single' || !self.settings.duplicates ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t\t\tif (inputMode === 'single') self.clear(silent);\n\t\t\tif (inputMode === 'multi' && self.isFull()) return;\n\n\t\t\titem = self._render('item', self.options[hashed]);\n\n\t\t\tif( self.control.contains(item) ){ // duplicates\n\t\t\t\titem = item.cloneNode(true) as HTMLElement;\n\t\t\t}\n\n\t\t\twasFull = self.isFull();\n\t\t\tself.items.splice(self.caretPos, 0, hashed);\n\t\t\tself.insertAtCaret(item);\n\n\t\t\tif (self.isSetup) {\n\n\t\t\t\t// update menu / remove the option (if this is not one item being added as part of series)\n\t\t\t\tif( !self.isPending && self.settings.hideSelected ){\n\t\t\t\t\tlet option = self.getOption(hashed);\n\t\t\t\t\tlet next = self.getAdjacent(option, 1);\n\t\t\t\t\tif( next ){\n\t\t\t\t\t\tself.setActiveOption(next);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// refreshOptions after setActiveOption(),\n\t\t\t\t// otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\t\t\t\tif( !self.isPending && !self.settings.closeAfterSelect ){\n\t\t\t\t\tself.refreshOptions(self.isFocused && inputMode !== 'single');\n\t\t\t\t}\n\n\t\t\t\t// hide the menu if the maximum number of items have been selected or no options are left\n\t\t\t\tif( self.settings.closeAfterSelect != false && self.isFull() ){\n\t\t\t\t\tself.close();\n\t\t\t\t} else if (!self.isPending) {\n\t\t\t\t\tself.positionDropdown();\n\t\t\t\t}\n\n\t\t\t\tself.trigger('item_add', hashed, item);\n\n\t\t\t\tif (!self.isPending) {\n\t\t\t\t\tself.updateOriginalInput({silent: silent});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!self.isPending || (!wasFull && self.isFull())) {\n\t\t\t\tself.inputState();\n\t\t\t\tself.refreshState();\n\t\t\t}\n\n\t\t});\n\t}\n\n\t/**\n\t * Removes the selected item matching\n\t * the provided value.\n\t *\n\t */\n\tremoveItem( item:string|TomItem|null=null, silent?:boolean ){\n\t\tconst self\t\t= this;\n\t\titem\t\t\t= self.getItem(item);\n\n\t\tif( !item ) return;\n\n\t\tvar i,idx;\n\t\tconst value\t= item.dataset.value;\n\t\ti = nodeIndex(item);\n\n\t\titem.remove();\n\t\tif( item.classList.contains('active') ){\n\t\t\tidx = self.activeItems.indexOf(item);\n\t\t\tself.activeItems.splice(idx, 1);\n\t\t\tremoveClasses(item,'active');\n\t\t}\n\n\t\tself.items.splice(i, 1);\n\t\tself.lastQuery = null;\n\t\tif (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t\t\tself.removeOption(value, silent);\n\t\t}\n\n\t\tif (i < self.caretPos) {\n\t\t\tself.setCaret(self.caretPos - 1);\n\t\t}\n\n\t\tself.updateOriginalInput({silent: silent});\n\t\tself.refreshState();\n\t\tself.positionDropdown();\n\t\tself.trigger('item_remove', value, item);\n\n\t}\n\n\t/**\n\t * Invokes the `create` method provided in the\n\t * TomSelect options that should provide the data\n\t * for the new item, given the user input.\n\t *\n\t * Once this completes, it will be added\n\t * to the item list.\n\t *\n\t */\n\tcreateItem( input:null|string=null, callback:TomCreateCallback = ()=>{} ):boolean{\n\n\t\t// triggerDropdown parameter @deprecated 2.1.1\n\t\tif( arguments.length === 3 ){\n\t\t\tcallback = arguments[2];\n\t\t}\n\t\tif( typeof callback != 'function' ){\n\t\t\tcallback = () => {};\n\t\t}\n\n\t\tvar self  = this;\n\t\tvar caret = self.caretPos;\n\t\tvar output;\n\t\tinput = input || self.inputValue();\n\n\t\tif (!self.canCreate(input)) {\n\t\t\tcallback();\n\t\t\treturn false;\n\t\t}\n\n\t\tself.lock();\n\n\t\tvar created = false;\n\t\tvar create = (data?:boolean|TomOption) => {\n\t\t\tself.unlock();\n\n\t\t\tif (!data || typeof data !== 'object') return callback();\n\t\t\tvar value = hash_key(data[self.settings.valueField]);\n\t\t\tif( typeof value !== 'string' ){\n\t\t\t\treturn callback();\n\t\t\t}\n\n\t\t\tself.setTextboxValue();\n\t\t\tself.addOption(data,true);\n\t\t\tself.setCaret(caret);\n\t\t\tself.addItem(value);\n\t\t\tcallback(data);\n\t\t\tcreated = true;\n\t\t};\n\n\t\tif( typeof self.settings.create === 'function' ){\n\t\t\toutput = self.settings.create.call(this, input, create);\n\t\t}else{\n\t\t\toutput = {\n\t\t\t\t[self.settings.labelField]: input,\n\t\t\t\t[self.settings.valueField]: input,\n\t\t\t};\n\t\t}\n\n\t\tif( !created ){\n\t\t\tcreate(output);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Re-renders the selected item lists.\n\t */\n\trefreshItems() {\n\t\tvar self = this;\n\t\tself.lastQuery = null;\n\n\t\tif (self.isSetup) {\n\t\t\tself.addItems(self.items);\n\t\t}\n\n\t\tself.updateOriginalInput();\n\t\tself.refreshState();\n\t}\n\n\t/**\n\t * Updates all state-dependent attributes\n\t * and CSS classes.\n\t */\n\trefreshState() {\n\t\tconst self     = this;\n\n\t\tself.refreshValidityState();\n\n\t\tconst isFull\t= self.isFull();\n\t\tconst isLocked\t= self.isLocked;\n\n\t\tself.wrapper.classList.toggle('rtl',self.rtl);\n\n\n\t\tconst wrap_classList = self.wrapper.classList;\n\n\t\twrap_classList.toggle('focus', self.isFocused)\n\t\twrap_classList.toggle('disabled', self.isDisabled)\n\t\twrap_classList.toggle('readonly', self.isReadOnly)\n\t\twrap_classList.toggle('required', self.isRequired)\n\t\twrap_classList.toggle('invalid', !self.isValid)\n\t\twrap_classList.toggle('locked', isLocked)\n\t\twrap_classList.toggle('full', isFull)\n\t\twrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden)\n\t\twrap_classList.toggle('dropdown-active', self.isOpen)\n\t\twrap_classList.toggle('has-options', isEmptyObject(self.options) )\n\t\twrap_classList.toggle('has-items', self.items.length > 0);\n\n\t}\n\n\n\t/**\n\t * Update the `required` attribute of both input and control input.\n\t *\n\t * The `required` property needs to be activated on the control input\n\t * for the error to be displayed at the right place. `required` also\n\t * needs to be temporarily deactivated on the input since the input is\n\t * hidden and can't show errors.\n\t */\n\trefreshValidityState() {\n\t\tvar self = this;\n\n\t\tif( !self.input.validity ){\n\t\t\treturn;\n\t\t}\n\n\t\tself.isValid = self.input.validity.valid;\n\t\tself.isInvalid = !self.isValid;\n\t}\n\n\t/**\n\t * Determines whether or not more items can be added\n\t * to the control without exceeding the user-defined maximum.\n\t *\n\t * @returns {boolean}\n\t */\n\tisFull() {\n\t\treturn this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t}\n\n\t/**\n\t * Refreshes the original <select> or <input>\n\t * element to reflect the current state.\n\t *\n\t */\n\tupdateOriginalInput( opts:TomArgObject = {} ){\n\t\tconst self = this;\n\t\tvar option, label;\n\n\t\tconst empty_option = self.input.querySelector('option[value=\"\"]') as HTMLOptionElement;\n\n\t\tif( self.is_select_tag ){\n\n\t\t\tconst selected:HTMLOptionElement[]\t\t= [];\n\t\t\tconst has_selected:number\t\t\t\t= self.input.querySelectorAll('option:checked').length;\n\n\t\t\tfunction AddSelected(option_el:HTMLOptionElement|null, value:string, label:string):HTMLOptionElement{\n\n\t\t\t\tif( !option_el ){\n\t\t\t\t\toption_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>') as HTMLOptionElement;\n\t\t\t\t}\n\n\t\t\t\t// don't move empty option from top of list\n\t\t\t\t// fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\t\t\t\tif( option_el != empty_option ){\n\t\t\t\t\tself.input.append(option_el);\n\t\t\t\t}\n\n\t\t\t\tselected.push(option_el);\n\n\t\t\t\t// marking empty option as selected can break validation\n\t\t\t\t// fixes https://github.com/orchidjs/tom-select/issues/303\n\t\t\t\tif( option_el != empty_option || has_selected > 0 ){\n\t\t\t\t\toption_el.selected = true;\n\t\t\t\t}\n\n\t\t\t\treturn option_el;\n\t\t\t}\n\n\t\t\t// unselect all selected options\n\t\t\tself.input.querySelectorAll('option:checked').forEach((option_el:Element) => {\n\t\t\t\t(<HTMLOptionElement>option_el).selected = false;\n\t\t\t});\n\n\n\t\t\t// nothing selected?\n\t\t\tif( self.items.length == 0 && self.settings.mode == 'single' ){\n\n\t\t\t\tAddSelected(empty_option, \"\", \"\");\n\n\t\t\t// order selected <option> tags for values in self.items\n\t\t\t}else{\n\n\t\t\t\tself.items.forEach((value)=>{\n\t\t\t\t\toption\t\t\t= self.options[value]!;\n\t\t\t\t\tlabel\t\t\t= option[self.settings.labelField] || '';\n\n\t\t\t\t\tif( selected.includes(option.$option) ){\n\t\t\t\t\t\tconst reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`) as HTMLOptionElement;\n\t\t\t\t\t\tAddSelected(reuse_opt, value, label);\n\t\t\t\t\t}else{\n\t\t\t\t\t\toption.$option\t= AddSelected(option.$option, value, label);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t} else {\n\t\t\tself.input.value = self.getValue() as string;\n\t\t}\n\n\t\tif (self.isSetup) {\n\t\t\tif (!opts.silent) {\n\t\t\t\tself.trigger('change', self.getValue() );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Shows the autocomplete dropdown containing\n\t * the available options.\n\t */\n\topen() {\n\t\tvar self = this;\n\n\t\tif (self.isLocked || self.isOpen || (self.settings.mode === 'multi' && self.isFull())) return;\n\t\tself.isOpen = true;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'true'});\n\t\tself.refreshState();\n\t\tapplyCSS(self.dropdown,{visibility: 'hidden', display: 'block'});\n\t\tself.positionDropdown();\n\t\tapplyCSS(self.dropdown,{visibility: 'visible', display: 'block'});\n\t\tself.focus();\n\t\tself.trigger('dropdown_open', self.dropdown);\n\t}\n\n\t/**\n\t * Closes the autocomplete dropdown menu.\n\t */\n\tclose(setTextboxValue=true) {\n\t\tvar self = this;\n\t\tvar trigger = self.isOpen;\n\n\t\tif( setTextboxValue ){\n\n\t\t\t// before blur() to prevent form onchange event\n\t\t\tself.setTextboxValue();\n\n\t\t\tif (self.settings.mode === 'single' && self.items.length) {\n\t\t\t\tself.inputState();\n\t\t\t}\n\t\t}\n\n\t\tself.isOpen = false;\n\t\tsetAttr(self.focus_node,{'aria-expanded': 'false'});\n\t\tapplyCSS(self.dropdown,{display: 'none'});\n\t\tif( self.settings.hideSelected ){\n\t\t\tself.clearActiveOption();\n\t\t}\n\t\tself.refreshState();\n\n\t\tif (trigger) self.trigger('dropdown_close', self.dropdown);\n\t}\n\n\t/**\n\t * Calculates and applies the appropriate\n\t * position of the dropdown if dropdownParent = 'body'.\n\t * Otherwise, position is determined by css\n\t */\n\tpositionDropdown(){\n\n\t\tif( this.settings.dropdownParent !== 'body' ){\n\t\t\treturn;\n\t\t}\n\n\t\tvar context\t\t\t= this.control;\n\t\tvar rect\t\t\t= context.getBoundingClientRect();\n\t\tvar top\t\t\t\t= context.offsetHeight + rect.top  + window.scrollY;\n\t\tvar left\t\t\t= rect.left + window.scrollX;\n\n\n\t\tapplyCSS(this.dropdown,{\n\t\t\twidth : rect.width + 'px',\n\t\t\ttop   : top + 'px',\n\t\t\tleft  : left + 'px'\n\t\t});\n\n\t}\n\n\t/**\n\t * Resets / clears all selected items\n\t * from the control.\n\t *\n\t */\n\tclear(silent?:boolean) {\n\t\tvar self = this;\n\n\t\tif (!self.items.length) return;\n\n\t\tvar items = self.controlChildren();\n\t\titerate(items,(item:TomItem)=>{\n\t\t\tself.removeItem(item,true);\n\t\t});\n\n\t\tself.inputState();\n\t\tif( !silent ) self.updateOriginalInput();\n\t\tself.trigger('clear');\n\t}\n\n\t/**\n\t * A helper method for inserting an element\n\t * at the current caret position.\n\t *\n\t */\n\tinsertAtCaret(el:HTMLElement) {\n\t\tconst self\t\t= this;\n\t\tconst caret\t\t= self.caretPos;\n\t\tconst target\t= self.control;\n\n\t\ttarget.insertBefore(el, target.children[caret] || null);\n\t\tself.setCaret(caret + 1);\n\t}\n\n\t/**\n\t * Removes the current selected item(s).\n\t *\n\t */\n\tdeleteSelection(e:KeyboardEvent):boolean {\n\t\tvar direction, selection, caret, tail;\n\t\tvar self = this;\n\n\t\tdirection = (e && e.keyCode === constants.KEY_BACKSPACE) ? -1 : 1;\n\t\tselection = getSelection(self.control_input);\n\n\n\t\t// determine items that will be removed\n\t\tconst rm_items:TomItem[]\t= [];\n\n\t\tif (self.activeItems.length) {\n\n\t\t\ttail = getTail(self.activeItems, direction);\n\t\t\tcaret = nodeIndex(tail);\n\n\t\t\tif (direction > 0) { caret++; }\n\n\t\t\titerate(self.activeItems, (item:TomItem) => rm_items.push(item) );\n\n\t\t} else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t\t\tconst items = self.controlChildren();\n\t\t\tlet rm_item;\n\t\t\tif( direction < 0 && selection.start === 0 && selection.length === 0 ){\n\t\t\t\trm_item = items[self.caretPos - 1];\n\n\t\t\t}else if( direction > 0 && selection.start === self.inputValue().length ){\n\t\t\t\trm_item = items[self.caretPos];\n\t\t\t}\n\n\t\t\tif( rm_item !== undefined ){\n\t\t\t\trm_items.push( rm_item );\n\t\t\t}\n\t\t}\n\n\t\tif( !self.shouldDelete(rm_items,e) ){\n\t\t\treturn false;\n\t\t}\n\n\t\tpreventDefault(e,true);\n\n\t\t// perform removal\n\t\tif (typeof caret !== 'undefined') {\n\t\t\tself.setCaret(caret);\n\t\t}\n\n\t\twhile( rm_items.length ){\n\t\t\tself.removeItem(rm_items.pop());\n\t\t}\n\n\t\tself.inputState();\n\t\tself.positionDropdown();\n\t\tself.refreshOptions(false);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Return true if the items should be deleted\n\t */\n\tshouldDelete(items:TomItem[],evt:MouseEvent|KeyboardEvent){\n\n\t\tconst values = items.map(item => item.dataset.value);\n\n\t\t// allow the callback to abort\n\t\tif( !values.length || (typeof this.settings.onDelete === 'function' && this.settings.onDelete(values,evt) === false) ){\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Selects the previous / next item (depending on the `direction` argument).\n\t *\n\t * > 0 - right\n\t * < 0 - left\n\t *\n\t */\n\tadvanceSelection(direction:number, e?:MouseEvent|KeyboardEvent) {\n\t\tvar last_active, adjacent, self = this;\n\n\t\tif (self.rtl) direction *= -1;\n\t\tif( self.inputValue().length ) return;\n\n\n\t\t// add or remove to active items\n\t\tif( isKeyDown(constants.KEY_SHORTCUT,e) || isKeyDown('shiftKey',e) ){\n\n\t\t\tlast_active\t\t\t= self.getLastActive(direction);\n\t\t\tif( last_active ){\n\n\t\t\t\tif( !last_active.classList.contains('active') ){\n\t\t\t\t\tadjacent\t\t\t= last_active;\n\t\t\t\t}else{\n\t\t\t\t\tadjacent\t\t\t= self.getAdjacent(last_active,direction,'item');\n\t\t\t\t}\n\n\t\t\t// if no active item, get items adjacent to the control input\n\t\t\t}else if( direction > 0 ){\n\t\t\t\tadjacent\t\t\t= self.control_input.nextElementSibling;\n\t\t\t}else{\n\t\t\t\tadjacent\t\t\t= self.control_input.previousElementSibling;\n\t\t\t}\n\n\n\t\t\tif( adjacent ){\n\t\t\t\tif( adjacent.classList.contains('active') ){\n\t\t\t\t\tself.removeActiveItem(last_active);\n\t\t\t\t}\n\t\t\t\tself.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t\t\t}\n\n\t\t// move caret to the left or right\n\t\t}else{\n\t\t\tself.moveCaret(direction);\n\t\t}\n\t}\n\n\tmoveCaret(direction:number){}\n\n\t/**\n\t * Get the last active item\n\t *\n\t */\n\tgetLastActive(direction?:number){\n\n\t\tlet last_active = this.control.querySelector('.last-active');\n\t\tif( last_active ){\n\t\t\treturn last_active;\n\t\t}\n\n\n\t\tvar result = this.control.querySelectorAll('.active');\n\t\tif( result ){\n\t\t\treturn getTail(result,direction);\n\t\t}\n\t}\n\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tsetCaret(new_pos:number) {\n\t\tthis.caretPos = this.items.length;\n\t}\n\n\t/**\n\t * Return list of item dom elements\n\t *\n\t */\n\tcontrolChildren():TomItem[]{\n\t\treturn Array.from( this.control.querySelectorAll('[data-ts-item]') ) as TomItem[];\n\t}\n\n\t/**\n\t * Disables user input on the control. Used while\n\t * items are being asynchronously created.\n\t */\n\tlock() {\n\t\tthis.setLocked(true);\n\t}\n\n\t/**\n\t * Re-enables user input on the control.\n\t */\n\tunlock() {\n\t\tthis.setLocked(false);\n\t}\n\n\t/**\n\t * Disable or enable user input on the control\n\t */\n\tsetLocked( lock:boolean = this.isReadOnly || this.isDisabled ){\n\t\tthis.isLocked = lock;\n\t\tthis.refreshState();\n\t}\n\n\t/**\n\t * Disables user input on the control completely.\n\t * While disabled, it cannot receive focus.\n\t */\n\tdisable() {\n\t\tthis.setDisabled(true);\n\t\tthis.close();\n\t}\n\n\t/**\n\t * Enables the control so that it can respond\n\t * to focus and user input.\n\t */\n\tenable() {\n\t\tthis.setDisabled(false);\n\t}\n\n\tsetDisabled(disabled:boolean){\n\t\tthis.focus_node.tabIndex\t\t= disabled ? -1 : this.tabIndex;\n\t\tthis.isDisabled\t\t\t\t\t= disabled;\n\t\tthis.input.disabled\t\t\t\t= disabled;\n\t\tthis.control_input.disabled\t\t= disabled;\n\t\tthis.setLocked();\n\t}\n\n\tsetReadOnly(isReadOnly:boolean){\n\t\tthis.isReadOnly\t\t\t\t\t= isReadOnly;\n\t\tthis.input.readOnly\t\t\t\t= isReadOnly;\n\t\tthis.control_input.readOnly\t\t= isReadOnly;\n\t\tthis.setLocked();\n\t}\n\n\t/**\n\t * Completely destroys the control and\n\t * unbinds all event listeners so that it can\n\t * be garbage collected.\n\t */\n\tdestroy() {\n\t\tvar self = this;\n\t\tvar revertSettings = self.revertSettings;\n\n\t\tself.trigger('destroy');\n\t\tself.off();\n\t\tself.wrapper.remove();\n\t\tself.dropdown.remove();\n\n\t\tself.input.innerHTML = revertSettings.innerHTML;\n\t\tself.input.tabIndex = revertSettings.tabIndex;\n\n\t\tremoveClasses(self.input,'tomselected','ts-hidden-accessible');\n\n\t\tself._destroy();\n\n\t\tdelete self.input.tomselect;\n\t}\n\n\t/**\n\t * A helper method for rendering \"item\" and\n\t * \"option\" templates, given the data.\n\t *\n\t */\n\trender( templateName:TomTemplateNames, data?:any ):null|HTMLElement{\n\t\tvar id, html;\n\t\tconst self = this;\n\n\t\tif( typeof this.settings.render[templateName] !== 'function' ){\n\t\t\treturn null;\n\t\t}\n\n\t\t// render markup\n\t\thtml = self.settings.render[templateName].call(this, data, escape_html);\n\n\t\tif( !html ){\n\t\t\treturn null;\n\t\t}\n\n\t\thtml = getDom( html );\n\n\t\t// add mandatory attributes\n\t\tif (templateName === 'option' || templateName === 'option_create') {\n\n\t\t\tif( data[self.settings.disabledField] ){\n\t\t\t\tsetAttr(html,{'aria-disabled':'true'});\n\t\t\t}else{\n\t\t\t\tsetAttr(html,{'data-selectable': ''});\n\t\t\t}\n\n\t\t}else if (templateName === 'optgroup') {\n\t\t\tid = data.group[self.settings.optgroupValueField];\n\t\t\tsetAttr(html,{'data-group': id});\n\t\t\tif(data.group[self.settings.disabledField]) {\n\t\t\t\tsetAttr(html,{'data-disabled': ''});\n\t\t\t}\n\t\t}\n\n\t\tif (templateName === 'option' || templateName === 'item') {\n\t\t\tconst value\t= get_hash(data[self.settings.valueField]);\n\t\t\tsetAttr(html,{'data-value': value });\n\n\n\t\t\t// make sure we have some classes if a template is overwritten\n\t\t\tif( templateName === 'item' ){\n\t\t\t\taddClasses(html,self.settings.itemClass);\n\t\t\t\tsetAttr(html,{'data-ts-item':''});\n\t\t\t}else{\n\t\t\t\taddClasses(html,self.settings.optionClass);\n\t\t\t\tsetAttr(html,{\n\t\t\t\t\trole:'option',\n\t\t\t\t\tid:data.$id\n\t\t\t\t});\n\n\t\t\t\t// update cache\n\t\t\t\tdata.$div = html;\n\t\t\t\tself.options[value] = data;\n\t\t\t}\n\n\n\t\t}\n\n\t\treturn html;\n\n\t}\n\n\n\t/**\n\t * Type guarded rendering\n\t *\n\t */\n\t_render( templateName:TomTemplateNames, data?:any ):HTMLElement{\n\t\tconst html = this.render(templateName, data);\n\n\t\tif( html == null ){\n\t\t\tthrow 'HTMLElement expected';\n\t\t}\n\t\treturn html;\n\t}\n\n\n\t/**\n\t * Clears the render cache for a template. If\n\t * no template is given, clears all render\n\t * caches.\n\t *\n\t */\n\tclearCache():void{\n\n\t\titerate(this.options, (option:TomOption)=>{\n\t\t\tif( option.$div ){\n\t\t\t\toption.$div.remove();\n\t\t\t\tdelete option.$div;\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Removes a value from item and option caches\n\t *\n\t */\n\tuncacheValue(value:string){\n\n\t\tconst option_el\t\t\t= this.getOption(value);\n\t\tif( option_el ) option_el.remove();\n\n\t}\n\n\t/**\n\t * Determines whether or not to display the\n\t * create item prompt, given a user input.\n\t *\n\t */\n\tcanCreate( input:string ):boolean {\n\t\treturn this.settings.create && (input.length > 0) && (this.settings.createFilter as TomCreateFilter ).call(this, input);\n\t}\n\n\n\t/**\n\t * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t *\n\t * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t *\n\t * });\n\t */\n\thook( when:string, method:string, new_fn:any ){\n\t\tvar self = this;\n\t\tvar orig_method = self[method];\n\n\n\t\tself[method] = function(){\n\t\t\tvar result, result_new;\n\n\t\t\tif( when === 'after' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\tresult_new = new_fn.apply(self, arguments );\n\n\t\t\tif( when === 'instead' ){\n\t\t\t\treturn result_new;\n\t\t\t}\n\n\t\t\tif( when === 'before' ){\n\t\t\t\tresult = orig_method.apply(self, arguments);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t}\n\n};\n", "/**\n * Plugin: \"change_listener\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\taddEvent(this.input,'change',()=>{\n\t\tthis.sync();\n\t});\n};\n", "/**\n * Plugin: \"checkbox_options\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { preventDefault, hash_key } from '../../utils';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tvar self = this;\n\tvar orig_onOptionSelect = self.onOptionSelect;\n\n\tself.settings.hideSelected = false;\n\n\tconst cbOptions : CBOptions = Object.assign({\n\t\t// so that the user may add different ones as well\n\t\tclassName             : \"tomselect-checkbox\",\n\n\t\t// the following default to the historic plugin's values\n\t\tcheckedClassNames     : undefined,\n\t\tuncheckedClassNames   : undefined,\n\t}, userOptions);\n\n\n\tvar UpdateChecked = function(checkbox:HTMLInputElement, toCheck : boolean) {\n\t\tif( toCheck ){\n\t\t\tcheckbox.checked = true;\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t}else{\n\t\t\tcheckbox.checked = false;\n\t\t\tif (cbOptions.checkedClassNames) {\n\t\t\t\tcheckbox.classList.remove(...cbOptions.checkedClassNames);\n\t\t\t}\n\t\t\tif (cbOptions.uncheckedClassNames) {\n\t\t\t\tcheckbox.classList.add(...cbOptions.uncheckedClassNames);\n\t\t\t}\n\t\t}\n\t}\n\n\t// update the checkbox for an option\n\tvar UpdateCheckbox = function(option:HTMLElement){\n\t\tsetTimeout(()=>{\n\t\t\tvar checkbox = option.querySelector('input.' + cbOptions.className);\n\t\t\tif( checkbox instanceof HTMLInputElement ){\n\t\t\t\tUpdateChecked(checkbox, option.classList.contains('selected'));\n\t\t\t}\n\t\t},1);\n\t};\n\n\t// add checkbox to option template\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_option = self.settings.render.option;\n\n\t\tself.settings.render.option = (data, escape_html) => {\n\t\t\tvar rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t\t\tvar checkbox = document.createElement('input');\n\t\t\tif (cbOptions.className) {\n\t\t\t\tcheckbox.classList.add(cbOptions.className);\n\t\t\t}\n\t\t\tcheckbox.addEventListener('click',function(evt){\n\t\t\t\tpreventDefault(evt);\n\t\t\t});\n\n\t\t\tcheckbox.type = 'checkbox';\n\t\t\tconst hashed = hash_key(data[self.settings.valueField]);\n\n\t\t\tUpdateChecked(checkbox, !!(hashed && self.items.indexOf(hashed) > -1) );\n\n\t\t\trendered.prepend(checkbox);\n\t\t\treturn rendered;\n\t\t};\n\t});\n\n\t// uncheck when item removed\n\tself.on('item_remove',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\toption.classList.remove('selected'); // selected class won't be removed yet\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\t// check when item added\n\tself.on('item_add',(value:string) => {\n\t\tvar option = self.getOption(value);\n\n\t\tif( option ){ // if dropdown hasn't been opened yet, the option won't exist\n\t\t\tUpdateCheckbox(option);\n\t\t}\n\t});\n\n\n\t// remove items when selected option is clicked\n\tself.hook('instead','onOptionSelect',( evt:KeyboardEvent, option:HTMLElement )=>{\n\n\t\tif( option.classList.contains('selected') ){\n\t\t\toption.classList.remove('selected')\n\t\t\tself.removeItem(option.dataset.value);\n\t\t\tself.refreshOptions();\n\t\t\tpreventDefault(evt,true);\n\t\t\treturn;\n        }\n\n\t\torig_onOptionSelect.call(self, evt, option);\n\n\t\tUpdateCheckbox(option);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { CBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:CBOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\tclassName: 'clear-button',\n\t\ttitle: 'Clear All',\n\t\thtml: (data:CBOptions) => {\n\t\t\treturn `<div class=\"${data.className}\" title=\"${data.title}\">&#10799;</div>`;\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar button = getDom(options.html(options));\n\t\tbutton.addEventListener('click',(evt)=>{\n\n\t\t\tif( self.isLocked ) return;\n\n\t\t\tself.clear();\n\n\t\t\tif( self.settings.mode === 'single' && self.settings.allowEmptyOption ){\n\t\t\t\tself.addItem('');\n\t\t\t}\n\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation();\n\t\t});\n\t\tself.control.appendChild(button);\n\t});\n\n};\n", "/**\n * Plugin: \"drag_drop\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption, TomItem } from '../../types/index';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { getDom, setAttr } from '../../vanilla';\n\n\nconst insertAfter = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode.nextSibling);\n}\n\nconst insertBefore = (referenceNode:Element, newNode:Element) => {\n\treferenceNode.parentNode?.insertBefore(newNode, referenceNode);\n}\n\nconst isBefore = (referenceNode:Element|undefined|null, newNode:Element|undefined|null) =>{\n\t\n\tdo{\n\t\tnewNode = newNode?.previousElementSibling;\n\n\t\tif( referenceNode == newNode ){\n\t\t\treturn true;\n\t\t}\n\n\t}while( newNode && newNode.previousElementSibling );\n\n\treturn false;\n}\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tif (self.settings.mode !== 'multi') return;\n\n\tvar orig_lock\t\t= self.lock;\n\tvar orig_unlock\t\t= self.unlock;\n\tlet sortable = true;\n\t\tlet drag_item:TomItem|undefined;\n\n\n\t/**\n\t * Add draggable attribute to item\n\t */\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\t\t\tconst item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\t\t\tsetAttr(item,{'draggable':'true'});\n\n\n\t\t\t// prevent doc_mousedown (see tom-select.ts)\n\t\t\tconst mousedown = (evt:Event) => {\n\t\t\t\tif( !sortable ) preventDefault(evt);\n\t\t\t\tevt.stopPropagation();\n\t\t\t}\n\n\t\t\tconst dragStart = (evt:Event) => {\n\t\t\t\tdrag_item = item;\n\t\t\t\t\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem.classList.add('ts-dragging');\n\t\t\t\t}, 0);\n\t\t\t\t\n\t\t\t}\n\n\t\t\tconst dragOver = (evt:Event) =>{\n\t\t\t\tevt.preventDefault();\n\t\t\t\titem.classList.add('ts-drag-over');\n\t\t\t\tmoveitem(item,drag_item);\n\t\t\t}\n\n\t\t\tconst dragLeave = () => {\n\t\t\t\titem.classList.remove('ts-drag-over');\n\t\t\t}\n\n\t\t\tconst moveitem = (targetitem:TomItem, dragitem:TomItem|undefined) => {\n\t\t\t\tif( dragitem === undefined ) return;\n\t\t\t\t\n\t\t\t\tif( isBefore(dragitem,item) ){\n\t\t\t\t\tinsertAfter(targetitem,dragitem);\n\t\t\t\t}else{\n\t\t\t\t\tinsertBefore(targetitem,dragitem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst dragend = () => {\n\t\t\t\tdocument.querySelectorAll('.ts-drag-over').forEach(el=> el.classList.remove('ts-drag-over'));\n\t\t\t\tdrag_item?.classList.remove('ts-dragging');\n\t\t\t\tdrag_item = undefined;\n\n\t\t\t\tvar values:string[] = [];\n\t\t\t\tself.control.querySelectorAll(`[data-value]`).forEach((el:Element)=> {\n\t\t\t\t\tif( (<HTMLOptionElement>el).dataset.value ){\n\t\t\t\t\t\tlet value = (<HTMLOptionElement>el).dataset.value;\n\t\t\t\t\t\tif( value ){\n\t\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.setValue(values);\n\t\t\t}\t\n\n\n\t\t\taddEvent(item,'mousedown', mousedown);\n\t\t\taddEvent(item,'dragstart', dragStart);\n\t\t\taddEvent(item,'dragenter', dragOver)\n\t\t\taddEvent(item,'dragover', dragOver);\n\t\t\taddEvent(item,'dragleave', dragLeave);\n\t\t\taddEvent(item,'dragend', dragend);\n\t\t\t\t\n\t\t\treturn item;\n\t\t}\t\n\t});\n\n\n\n\tself.hook('instead','lock',()=>{\n\t\tsortable = false;\n\t\treturn orig_lock.call(self);\n\t});\n\n\tself.hook('instead','unlock',()=>{\n\t\tsortable = true;\n\t\treturn orig_unlock.call(self);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_header\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { preventDefault } from '../../utils';\nimport { DHOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:DHOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttitle         : 'Untitled',\n\t\theaderClass   : 'dropdown-header',\n\t\ttitleRowClass : 'dropdown-header-title',\n\t\tlabelClass    : 'dropdown-header-label',\n\t\tcloseClass    : 'dropdown-header-close',\n\n\t\thtml: (data:DHOptions) => {\n\t\t\treturn (\n\t\t\t\t'<div class=\"' + data.headerClass + '\">' +\n\t\t\t\t\t'<div class=\"' + data.titleRowClass + '\">' +\n\t\t\t\t\t\t'<span class=\"' + data.labelClass + '\">' + data.title + '</span>' +\n\t\t\t\t\t\t'<a class=\"' + data.closeClass + '\">&times;</a>' +\n\t\t\t\t\t'</div>' +\n\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t}, userOptions);\n\n\tself.on('initialize',()=>{\n\t\tvar header = getDom(options.html(options));\n\n\t\tvar close_link = header.querySelector('.'+options.closeClass);\n\t\tif( close_link ){\n\t\t\tclose_link.addEventListener('click',(evt)=>{\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t\tself.close();\n\t\t\t});\n\t\t}\n\n\t\tself.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { nodeIndex, removeClasses } from '../../vanilla';\n\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\t/**\n\t * Moves the caret to the specified index.\n\t *\n\t * The input must be moved by leaving it in place and moving the\n\t * siblings, due to the fact that focus cannot be restored once lost\n\t * on mobile webkit devices\n\t *\n\t */\n\tself.hook('instead','setCaret',(new_pos:number) => {\n\n\t\tif( self.settings.mode === 'single' || !self.control.contains(self.control_input) ) {\n\t\t\tnew_pos = self.items.length;\n\t\t} else {\n\t\t\tnew_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t\t\tif( new_pos != self.caretPos && !self.isPending ){\n\n\t\t\t\tself.controlChildren().forEach((child,j) => {\n\t\t\t\t\tif( j < new_pos ){\n\t\t\t\t\t\tself.control_input.insertAdjacentElement('beforebegin', child );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.control.appendChild( child );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.caretPos = new_pos;\n\t});\n\n\tself.hook('instead','moveCaret',(direction:number) => {\n\n\t\tif( !self.isFocused ) return;\n\n\t\t// move caret before or after selected items\n\t\tconst last_active\t\t= self.getLastActive(direction);\n\t\tif( last_active ){\n\t\t\tconst idx = nodeIndex(last_active);\n\t\t\tself.setCaret(direction > 0 ? idx + 1: idx);\n\t\t\tself.setActiveItem();\n\t\t\tremoveClasses(last_active as HTMLElement,'last-active');\n\n\t\t// move caret left or right of current position\n\t\t}else{\n\t\t\tself.setCaret(self.caretPos + direction);\n\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { getDom, addClasses } from '../../vanilla';\nimport { addEvent, preventDefault } from '../../utils';\n\n\nexport default function(this:TomSelect) {\n\tconst self = this;\n\n\tself.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\tself.hook('before','setup',()=>{\n\t\tself.focus_node\t\t= self.control;\n\n\t\taddClasses( self.control_input, 'dropdown-input');\n\n\t \tconst div = getDom('<div class=\"dropdown-input-wrap\">');\n\t\tdiv.append(self.control_input);\n\t\tself.dropdown.insertBefore(div, self.dropdown.firstChild);\n\n\t\t// set a placeholder in the select control\n\t\tconst placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />') as HTMLInputElement;\n\t\tplaceholder.placeholder = self.settings.placeholder ||'';\n\t\tself.control.append(placeholder);\n\n\t});\n\n\n\tself.on('initialize',()=>{\n\n\t\t// set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n\t\tself.control_input.addEventListener('keydown',(evt:KeyboardEvent) =>{\n\t\t//addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n\t\t\tswitch( evt.keyCode ){\n\t\t\t\tcase constants.KEY_ESC:\n\t\t\t\t\tif (self.isOpen) {\n\t\t\t\t\t\tpreventDefault(evt,true);\n\t\t\t\t\t\tself.close();\n\t\t\t\t\t}\n\t\t\t\t\tself.clearActiveItems();\n\t\t\t\treturn;\n\t\t\t\tcase constants.KEY_TAB:\n\t\t\t\t\tself.focus_node.tabIndex = -1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn self.onKeyDown.call(self,evt);\n\t\t});\n\n\t\tself.on('blur',()=>{\n\t\t\tself.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n\t\t});\n\n\n\t\t// give the control_input focus when the dropdown is open\n\t\tself.on('dropdown_open',() =>{\n\t\t\tself.control_input.focus();\n\t\t});\n\n\t\t// prevent onBlur from closing when focus is on the control_input\n\t\tconst orig_onBlur = self.onBlur;\n\t\tself.hook('instead','onBlur',(evt?:FocusEvent)=>{\n\t\t\tif( evt && evt.relatedTarget == self.control_input ) return;\n\t\t\treturn orig_onBlur.call(self);\n\t\t});\n\n\t\taddEvent(self.control_input,'blur', () => self.onBlur() );\n\n\t\t// return focus to control to allow further keyboard input\n\t\tself.hook('before','close',() =>{\n\n\t\t\tif( !self.isOpen ) return;\n\t\t\tself.focus_node.focus({preventScroll: true});\n\t\t});\n\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { addEvent } from '../../utils';\n\nexport default function(this:TomSelect) {\n\tvar self\t\t\t\t\t= this;\n\n\tself.on('initialize',()=>{\n\n\n\t\tvar test_input\t\t\t\t= document.createElement('span');\n\t\tvar control\t\t\t\t\t= self.control_input;\n\t\ttest_input.style.cssText\t= 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\n\t\tself.wrapper.appendChild(test_input);\n\n\n\t\tvar transfer_styles\t\t\t= [ 'letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform' ];\n\n\t\tfor( const style_name of transfer_styles ){\n\t\t\t// @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t\t\ttest_input.style[style_name] = control.style[style_name];\n\t\t}\n\n\n\t\t/**\n\t\t * Set the control width\n\t\t *\n\t\t */\n\t\tvar resize = ()=>{\n\t\t\ttest_input.textContent\t= control.value;\n\t\t\tcontrol.style.width\t\t= test_input.clientWidth+'px';\n\t\t};\n\n\t\tresize();\n\t\tself.on('update item_add item_remove',resize);\n\t\taddEvent(control,'input', resize );\n\t\taddEvent(control,'keyup', resize );\n\t\taddEvent(control,'blur', resize );\n\t\taddEvent(control,'update', resize );\n\t});\n\n};\n", "/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\tvar orig_deleteSelection = self.deleteSelection;\n\n\tthis.hook('instead','deleteSelection',(evt:KeyboardEvent) => {\n\n\t\tif( self.activeItems.length ){\n\t\t\treturn orig_deleteSelection.call(self, evt);\n\t\t}\n\n\t\treturn false;\n\t});\n\n};\n", "/**\n * Plugin: \"no_active_items\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\n\nexport default function(this:TomSelect) {\n\tthis.hook('instead','setActiveItem',() => {});\n\tthis.hook('instead','selectAll',() => {});\n};\n", "/**\n * Plugin: \"optgroup_columns\" (Tom Select.js)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport * as constants from '../../constants';\nimport { parentMatch, nodeIndex } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tvar self = this;\n\n\tvar orig_keydown = self.onKeyDown;\n\n\tself.hook('instead','onKeyDown',(evt:KeyboardEvent)=>{\n\t\tvar index, option, options, optgroup;\n\n\t\tif( !self.isOpen || !(evt.keyCode === constants.KEY_LEFT || evt.keyCode === constants.KEY_RIGHT)) {\n\t\t\treturn orig_keydown.call(self,evt);\n\t\t}\n\n\t\tself.ignoreHover\t= true;\n\t\toptgroup\t\t\t= parentMatch(self.activeOption,'[data-group]');\n\t\tindex\t\t\t\t= nodeIndex(self.activeOption,'[data-selectable]');\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( evt.keyCode === constants.KEY_LEFT ){\n\t\t\toptgroup = optgroup.previousSibling;\n\t\t} else {\n\t\t\toptgroup = optgroup.nextSibling;\n\t\t}\n\n\t\tif( !optgroup ){\n\t\t\treturn;\n\t\t}\n\n\t\toptions\t\t\t\t= (<HTMLOptGroupElement>optgroup).querySelectorAll('[data-selectable]');\n\t\toption\t\t\t\t= options[ Math.min(options.length - 1, index) ] as HTMLElement;\n\n\t\tif( option ){\n\t\t\tself.setActiveOption(option);\n\t\t}\n\n\t});\n\n};\n", "/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { getDom } from '../../vanilla';\nimport { escape_html, preventDefault, addEvent } from '../../utils';\nimport { TomOption, TomItem } from '../../types/index';\nimport { RBOptions } from './types';\n\nexport default function(this:TomSelect, userOptions:RBOptions) {\n\n\tconst options = Object.assign({\n\t\t\tlabel     : '&times;',\n\t\t\ttitle     : 'Remove',\n\t\t\tclassName : 'remove',\n\t\t\tappend    : true\n\t\t}, userOptions);\n\n\n\t//options.className = 'remove-single';\n\tvar self\t\t\t= this;\n\n\t// override the render method to add remove button to each item\n\tif( !options.append ){\n\t\treturn;\n\t}\n\n\tvar html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\n\tself.hook('after','setupTemplates',() => {\n\n\t\tvar orig_render_item = self.settings.render.item;\n\n\t\tself.settings.render.item = (data:TomOption, escape:typeof escape_html) => {\n\n\t\t\tvar item = getDom(orig_render_item.call(self, data, escape)) as TomItem;\n\n\t\t\tvar close_button = getDom(html);\n\t\t\titem.appendChild(close_button);\n\n\t\t\taddEvent(close_button,'mousedown',(evt) => {\n\t\t\t\tpreventDefault(evt,true);\n\t\t\t});\n\n\t\t\taddEvent(close_button,'click',(evt) => {\n\n\t\t\t\tif( self.isLocked ) return;\n\n\t\t\t\t// propagating will trigger the dropdown to show for single mode\n\t\t\t\tpreventDefault(evt,true);\n\n\t\t\t\tif( self.isLocked ) return;\n\t\t\t\tif( !self.shouldDelete([item],evt as MouseEvent) ) return;\n\n\t\t\t\tself.removeItem(item);\n\t\t\t\tself.refreshOptions(false);\n\t\t\t\tself.inputState();\n\t\t\t});\n\n\t\t\treturn item;\n\t\t};\n\n\t});\n\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\n\ntype TPluginOptions = {\n\ttext?:(option:TomOption)=>string,\n};\n\nexport default function(this:TomSelect, userOptions:TPluginOptions) {\n\tconst self = this;\n\n\tconst options = Object.assign({\n\t\ttext: (option:TomOption) => {\n\t\t\treturn option[self.settings.labelField];\n\t\t}\n\t},userOptions);\n\n\tself.on('item_remove',function(value:string){\n\t\tif( !self.isFocused ){\n\t\t\treturn;\n\t\t}\n\n\t\tif( self.control_input.value.trim() === '' ){\n\t\t\tvar option = self.options[value];\n\t\t\tif( option ){\n\t\t\t\tself.setTextboxValue(options.text.call(self, option));\n\t\t\t}\n\t\t}\n\t});\n\n};\n", "/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\n\nimport TomSelect from '../../tom-select';\nimport { TomOption } from '../../types/index';\nimport { addClasses } from '../../vanilla';\n\nexport default function(this:TomSelect) {\n\tconst self\t\t\t\t\t\t\t= this;\n\tconst orig_canLoad\t\t\t\t\t= self.canLoad;\n\tconst orig_clearActiveOption\t\t= self.clearActiveOption;\n\tconst orig_loadCallback\t\t\t\t= self.loadCallback;\n\n\tvar pagination:{[key:string]:any}\t= {};\n\tvar dropdown_content:HTMLElement;\n\tvar loading_more\t\t\t\t\t= false;\n\tvar load_more_opt:HTMLElement;\n\tvar default_values: string[]\t\t= [];\n\n\tif( !self.settings.shouldLoadMore ){\n\n\t\t// return true if additional results should be loaded\n\t\tself.settings.shouldLoadMore = ():boolean=>{\n\n\t\t\tconst scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\t\t\tif( scroll_percent > 0.9 ){\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif( self.activeOption ){\n\t\t\t\tvar selectable\t= self.selectable();\n\t\t\t\tvar index\t\t= Array.from(selectable).indexOf(self.activeOption);\n\t\t\t\tif( index >= (selectable.length-2) ){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\tif( !self.settings.firstUrl ){\n\t\tthrow 'virtual_scroll plugin requires a firstUrl() method';\n\t}\n\n\n\t// in order for virtual scrolling to work,\n\t// options need to be ordered the same way they're returned from the remote data source\n\tself.settings.sortField\t\t\t= [{field:'$order'},{field:'$score'}];\n\n\n\t// can we load more results for given query?\n\tconst canLoadMore = (query:string):boolean => {\n\n\t\tif( typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions ){\n\t\t\treturn false;\n\t\t}\n\n\t\tif( (query in pagination) && pagination[query] ){\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t};\n\n\tconst clearFilter = (option:TomOption, value:string):boolean => {\n\t\tif( self.items.indexOf(value) >= 0 || default_values.indexOf(value) >= 0 ){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\n\t// set the next url that will be\n\tself.setNextUrl = (value:string,next_url:any):void => {\n\t\tpagination[value] = next_url;\n\t};\n\n\t// getUrl() to be used in settings.load()\n\tself.getUrl = (query:string):any =>{\n\n\t\tif( query in pagination ){\n\t\t\tconst next_url = pagination[query];\n\t\t\tpagination[query] = false;\n\t\t\treturn next_url;\n\t\t}\n\n\t\t// if the user goes back to a previous query\n\t\t// we need to load the first page again\n\t\tself.clearPagination();\n\n\t\treturn self.settings.firstUrl.call(self,query);\n\t};\n\n\t// clear pagination\n\tself.clearPagination = ():void =>{\n\t\tpagination = {};\n\t};\n\n\t// don't clear the active option (and cause unwanted dropdown scroll)\n\t// while loading more results\n\tself.hook('instead','clearActiveOption',()=>{\n\n\t\tif( loading_more ){\n\t\t\treturn;\n\t\t}\n\n\t\treturn orig_clearActiveOption.call(self);\n\t});\n\n\t// override the canLoad method\n\tself.hook('instead','canLoad',(query:string)=>{\n\n\t\t// first time the query has been seen\n\t\tif( !(query in pagination) ){\n\t\t\treturn orig_canLoad.call(self,query);\n\t\t}\n\n\t\treturn canLoadMore(query);\n\t});\n\n\n\t// wrap the load\n\tself.hook('instead','loadCallback',( options:TomOption[], optgroups:TomOption[])=>{\n\n\t\tif( !loading_more ){\n\t\t\tself.clearOptions(clearFilter);\n\t\t}else if( load_more_opt ){\n\t\t\tconst first_option = options[0];\n\t\t\tif( first_option !== undefined ){\n\t\t\t\tload_more_opt.dataset.value\t\t= first_option[self.settings.valueField];\n\t\t\t}\n\t\t}\n\n\t\torig_loadCallback.call( self, options, optgroups);\n\n\t\tloading_more = false;\n\t});\n\n\n\t// add templates to dropdown\n\t//\tloading_more if we have another url in the queue\n\t//\tno_more_results if we don't have another url in the queue\n\tself.hook('after','refreshOptions',()=>{\n\n\t\tconst query\t\t= self.lastValue;\n\t\tvar option;\n\n\t\tif( canLoadMore(query) ){\n\n\t\t\toption = self.render('loading_more',{query:query});\n\t\t\tif( option ){\n\t\t\t\toption.setAttribute('data-selectable',''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t\t\t\tload_more_opt = option;\n\t\t\t}\n\n\t\t}else if( (query in pagination) && !dropdown_content.querySelector('.no-results') ){\n\t\t\toption = self.render('no_more_results',{query:query});\n\t\t}\n\n\t\tif( option ){\n\t\t\taddClasses(option,self.settings.optionClass);\n\t\t\tdropdown_content.append( option );\n\t\t}\n\n\t});\n\n\n\t// add scroll listener and default templates\n\tself.on('initialize',()=>{\n\t\tdefault_values = Object.keys(self.options);\n\t\tdropdown_content = self.dropdown_content;\n\n\t\t// default templates\n\t\tself.settings.render = Object.assign({}, {\n\t\t\tloading_more:() => {\n\t\t\t\treturn `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t\t\t},\n\t\t\tno_more_results:() =>{\n\t\t\t\treturn `<div class=\"no-more-results\">No more results</div>`;\n\t\t\t}\n\t\t},self.settings.render);\n\n\n\t\t// watch dropdown content scroll position\n\t\tdropdown_content.addEventListener('scroll',()=>{\n\n\t\t\tif( !self.settings.shouldLoadMore.call(self) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\t\t\tif( !canLoadMore(self.lastValue) ){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// don't call load() too much\n\t\t\tif( loading_more ) return;\n\n\n\t\t\tloading_more = true;\n\t\t\tself.load.call(self,self.lastValue);\n\t\t});\n\t});\n\n};\n", "import TomSelect from './tom-select';\n\nimport change_listener from './plugins/change_listener/plugin';\nimport checkbox_options from './plugins/checkbox_options/plugin';\nimport clear_button from './plugins/clear_button/plugin';\nimport drag_drop from './plugins/drag_drop/plugin';\nimport dropdown_header from './plugins/dropdown_header/plugin';\nimport caret_position from './plugins/caret_position/plugin';\nimport dropdown_input from './plugins/dropdown_input/plugin';\nimport input_autogrow from './plugins/input_autogrow/plugin';\nimport no_backspace_delete from './plugins/no_backspace_delete/plugin';\nimport no_active_items from './plugins/no_active_items/plugin';\nimport optgroup_columns from './plugins/optgroup_columns/plugin';\nimport remove_button from './plugins/remove_button/plugin';\nimport restore_on_backspace from './plugins/restore_on_backspace/plugin';\nimport virtual_scroll from './plugins/virtual_scroll/plugin';\n\nTomSelect.define('change_listener', change_listener);\nTomSelect.define('checkbox_options', checkbox_options);\nTomSelect.define('clear_button', clear_button);\nTomSelect.define('drag_drop', drag_drop);\nTomSelect.define('dropdown_header', dropdown_header);\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('input_autogrow', input_autogrow);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('no_active_items', no_active_items);\nTomSelect.define('optgroup_columns', optgroup_columns);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\nTomSelect.define('virtual_scroll', virtual_scroll);\n\nexport default TomSelect;\n"],
  "mappings": "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",
  "names": ["forEvents", "events", "callback", "split", "forEach", "event", "MicroEvent", "constructor", "_events", "on", "fct", "event_array", "push", "off", "n", "arguments", "length", "undefined", "splice", "indexOf", "trigger", "args", "self", "apply", "MicroPlugin", "Interface", "plugins", "names", "settings", "requested", "loaded", "define", "name", "fn", "initializePlugins", "key", "queue", "Array", "isArray", "plugin", "options", "hasOwnProperty", "shift", "require", "loadPlugin", "Error", "code_points", "unicode_map", "iterate", "get_field", "object", "getDom", "query", "jquery", "HTMLElement", "isHtmlString", "tpl", "document", "createElement", "innerHTML", "trim", "content", "firstChild", "querySelector", "arg", "escapeQuery", "replace", "triggerEvent", "dom_el", "event_name", "createEvent", "initEvent", "dispatchEvent", "applyCSS", "css", "Object", "assign", "style", "addClasses", "elmts", "classes", "norm_classes", "classesArray", "castAsArray", "map", "el", "cls", "classList", "add", "removeClasses", "remove", "_classes", "concat", "filter", "Boolean", "parentMatch", "target", "selector", "wrapper", "contains", "matches", "parentNode", "getTail", "list", "direction", "isEmptyObject", "obj", "keys", "nodeIndex", "amongst", "nodeName", "i", "previousElementSibling", "setAttr", "attrs", "val", "attr", "removeAttribute", "setAttribute", "replaceNode", "existing", "replacement", "replaceChild", "highlight", "element", "regex", "RegExp", "highlightText", "node", "match", "data", "spannode", "className", "middlebit", "splitText", "index", "middleclone", "cloneNode", "appendChild", "highlightChildren", "nodeType", "childNodes", "test", "tagName", "from", "highlightRecursive", "removeHighlight", "elements", "querySelectorAll", "prototype", "call", "parent", "normalize", "KEY_A", "KEY_RETURN", "KEY_ESC", "KEY_LEFT", "KEY_UP", "KEY_RIGHT", "KEY_DOWN", "KEY_BACKSPACE", "KEY_DELETE", "KEY_TAB", "IS_MAC", "navigator", "userAgent", "KEY_SHORTCUT", "optgroups", "delimiter", "splitOn", "persist", "diacritics", "create", "createOnBlur", "createFilter", "openOnFocus", "shouldOpen", "maxOptions", "maxItems", "hideSelected", "duplicates", "addPrecedence", "selectOnTab", "preload", "allowEmptyOption", "refreshThrottle", "loadThrottle", "loadingClass", "dataAttr", "optgroupField", "valueField", "labelField", "disabledField", "optgroupLabelField", "optgroupValueField", "lockOptgroupOrder", "sortField", "searchField", "searchConjunction", "mode", "wrapperClass", "controlClass", "dropdownClass", "dropdownContentClass", "itemClass", "optionClass", "dropdownParent", "controlInput", "copyClassesToDropdown", "placeholder", "hidePlaceholder", "shouldLoad", "render", "hash_key", "value", "get_hash", "escape_html", "str", "timeout", "setTimeout", "loadDebounce", "delay", "loading", "Math", "max", "clearTimeout", "loadedSearches", "debounce_events", "types", "type", "event_args", "getSelection", "input", "start", "selectionStart", "selectionEnd", "preventDefault", "evt", "stop", "stopPropagation", "addEvent", "addEventListener", "isKeyDown", "key_name", "count", "altKey", "ctrlKey", "shiftKey", "metaKey", "getId", "id", "existing_id", "getAttribute", "addSlashes", "append", "getSettings", "settings_user", "defaults", "attr_data", "field_label", "field_value", "field_disabled", "field_optgroup", "field_optgroup_label", "field_optgroup_value", "tag_name", "toLowerCase", "option", "textContent", "settings_element", "items", "init_select", "optionsMap", "group_count", "$order", "readData", "dataset", "json", "JSON", "parse", "addOption", "group", "arr", "option_data", "disabled", "$option", "selected", "addGroup", "optgroup", "optgroup_data", "children", "hasAttribute", "child", "init_textbox", "data_raw", "values", "opt", "instance_i", "TomSelect", "input_arg", "user_settings", "control_input", "dropdown", "control", "dropdown_content", "focus_node", "order", "tabIndex", "is_select_tag", "rtl", "inputId", "_destroy", "sifter", "isOpen", "isDisabled", "isReadOnly", "isRequired", "isInvalid", "isValid", "isLocked", "isFocused", "isInputHidden", "isSetup", "ignoreFocus", "ignoreHover", "hasOptions", "currentResults", "lastValue", "caretPos", "activeOption", "activeItems", "userOptions", "refreshTimeout", "dir", "tomselect", "computedStyle", "window", "getComputedStyle", "getPropertyValue", "required", "Sifter", "setupCallbacks", "setupTemplates", "_render", "inputMode", "setup", "passive_event", "passive", "listboxId", "role", "control_id", "label", "label_click", "focus", "bind", "for", "label_id", "width", "classes_plugins", "join", "multiple", "escape_regex", "load", "e", "target_match", "onOptionHover", "capture", "onOptionSelect", "onItemSelect", "onClick", "onKeyDown", "onKeyPress", "onInput", "onBlur", "onFocus", "onPaste", "doc_mousedown", "composedPath", "blur", "inputState", "win_scroll", "positionDropdown", "removeEventListener", "revertSettings", "insertAdjacentElement", "sync", "refreshState", "updateOriginalInput", "refreshItems", "close", "disable", "readOnly", "setReadOnly", "enable", "onChange", "setupOptions", "addOptions", "registerOptionGroup", "templates", "optgroup_header", "escape", "item", "option_create", "no_results", "not_loading", "callbacks", "get_settings", "setValue", "lastQuery", "clearActiveItems", "onMouseDown", "pastedText", "inputValue", "splitInput", "piece", "hash", "addItem", "createItem", "character", "String", "fromCharCode", "keyCode", "which", "constants", "selectAll", "open", "next", "getAdjacent", "setActiveOption", "prev", "canSelect", "activeElement", "advanceSelection", "deleteSelection", "_onInput", "refreshOptions", "wasFocused", "hasFocus", "deactivate", "setActiveItem", "setCaret", "parentElement", "closeAfterSelect", "canLoad", "loadCallback", "clearActiveOption", "setTextboxValue", "changed", "getValue", "silent", "clear", "addItems", "setMaxItems", "eventName", "begin", "end", "swap", "last", "getLastActive", "setActiveItemClass", "removeActiveItem", "last_active", "idx", "scroll", "scrollToOption", "behavior", "height_menu", "clientHeight", "scrollTop", "height_item", "offsetHeight", "y", "getBoundingClientRect", "top", "scrollBehavior", "controlChildren", "toggle", "offsetWidth", "getScoreFunction", "getSearchOptions", "sort", "field", "fields", "conjunction", "nesting", "search", "result", "calculateScore", "score", "hashed", "triggerDropdown", "j", "k", "html", "has_create_option", "active_group", "groups", "groups_order", "same_query", "results", "active_option", "show_dropdown", "closest", "min", "getGroupFragment", "group_order_i", "order_group", "fragment", "group_fragment", "createDocumentFragment", "opt_value", "opt_hash", "option_el", "getOption", "includes", "self_optgroup", "$id", "toString", "a", "b", "group_order", "group_heading", "group_options", "header", "group_html", "tokens", "tok", "add_template", "template", "insertBefore", "canCreate", "active_index", "selectable", "user_created", "dat", "registerOption", "addOptionGroup", "hashed_id", "removeOptionGroup", "clearCache", "clearOptionGroups", "updateOption", "item_new", "index_item", "value_old", "value_new", "data_old", "getItem", "uncacheValue", "option_new", "removeOption", "removeItem", "clearOptions", "boundFilter", "clearFilter", "$div", "all", "x", "last_item", "isPending", "wasFull", "isFull", "insertAtCaret", "caret", "output", "lock", "created", "unlock", "refreshValidityState", "wrap_classList", "validity", "valid", "opts", "empty_option", "AddSelected", "has_selected", "reuse_opt", "visibility", "display", "context", "rect", "scrollY", "left", "scrollX", "selection", "tail", "rm_items", "rm_item", "shouldDelete", "pop", "onDelete", "adjacent", "nextElementSibling", "moveCaret", "new_pos", "setLocked", "setDisabled", "destroy", "templateName", "hook", "when", "method", "new_fn", "orig_method", "result_new", "orig_onOptionSelect", "cbOptions", "checkedClassNames", "uncheckedClassNames", "UpdateChecked", "checkbox", "toCheck", "checked", "UpdateCheckbox", "HTMLInputElement", "orig_render_option", "rendered", "prepend", "title", "button", "insertAfter", "referenceNode", "newNode", "_referenceNode$parent", "nextSibling", "_referenceNode$parent2", "isBefore", "_newNode", "orig_lock", "orig_unlock", "sortable", "drag_item", "orig_render_item", "mousedown", "dragStart", "dragOver", "moveitem", "dragLeave", "targetitem", "dragitem", "dragend", "_drag_item", "headerClass", "titleRowClass", "labelClass", "closeClass", "close_link", "div", "orig_onBlur", "relatedTarget", "preventScroll", "test_input", "cssText", "transfer_styles", "style_name", "resize", "clientWidth", "orig_deleteSelection", "orig_keydown", "previousSibling", "close_button", "text", "orig_canLoad", "orig_clearActiveOption", "orig_loadCallback", "pagination", "loading_more", "load_more_opt", "default_values", "shouldLoadMore", "scroll_percent", "scrollHeight", "firstUrl", "canLoadMore", "setNextUrl", "next_url", "getUrl", "clearPagination", "first_option", "no_more_results", "change_listener", "checkbox_options", "clear_button", "drag_drop", "dropdown_header", "caret_position", "dropdown_input", "input_autogrow", "no_backspace_delete", "no_active_items", "optgroup_columns", "remove_button", "restore_on_backspace", "virtual_scroll"]
}
